{
  "hash": "9b8ae19c96b753449aa368cf93003ab9",
  "result": {
    "markdown": "---\ntitle: \"An example cleaning script\"\nauthor: \"Andreas Handel\"\ndate: \"2023-01-03\"\noutput: html_document\n---\n\n\n\n# Processing script\n\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\n# Setup\n\nLoad needed packages. make sure they are installed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/mn27712/MADA_NEW/muhammadnasir-mada2025-portofolio\n```\n:::\n:::\n\n\n\n# Data loading\n\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so:\npackage::function() that's not required one could just call the function specifying the package makes it clearer where the function \"lives\",\nbut it adds typing. You can do it either way.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location <- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata <- readxl::read_excel(data_location)\n```\n:::\n\n\n\n# Check data\n\nFirst we can look at the codebook\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncodebook <- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  <chr>           <chr>                                 <chr>                   \n1 Height          height in centimeters                 numeric value >0 or NA  \n2 Weight          weight in kilograms                   numeric value >0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Chol            Total Cholesterol                     <NA>                    \n5 Agecat          Age Chategory                         0 <= 30, 1= 31-40, 2= 4…\n```\n:::\n:::\n\n\n\nSeveral ways of looking at the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::glimpse(rawdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 14\nColumns: 5\n$ Height <chr> \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight <dbl> 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender <chr> \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n$ Chol   <dbl> 160, 140, 163, 243, 300, 259, 120, 310, 270, 123, 145, 176, 167…\n$ Agecat <dbl> 0, 0, 1, 3, 3, 2, 3, 2, 3, 0, 0, 3, 2, 3\n```\n:::\n\n```{.r .cell-code}\nsummary(rawdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Height              Weight          Gender               Chol      \n Length:14          Min.   :  45.0   Length:14          Min.   :120.0  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:148.8  \n Mode  :character   Median :  70.0   Mode  :character   Median :171.5  \n                    Mean   : 602.7                      Mean   :200.8  \n                    3rd Qu.:  90.0                      3rd Qu.:255.0  \n                    Max.   :7000.0                      Max.   :310.0  \n                    NA's   :1                                          \n     Agecat     \n Min.   :0.000  \n 1st Qu.:0.250  \n Median :2.000  \n Mean   :1.786  \n 3rd Qu.:3.000  \n Max.   :3.000  \n                \n```\n:::\n\n```{.r .cell-code}\nhead(rawdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  Height Weight Gender  Chol Agecat\n  <chr>   <dbl> <chr>  <dbl>  <dbl>\n1 180        80 M        160      0\n2 175        70 O        140      0\n3 sixty      60 F        163      1\n4 178        76 F        243      3\n5 192        90 NA       300      3\n6 6          55 F        259      2\n```\n:::\n\n```{.r .cell-code}\nskimr::skim(rawdata)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |        |\n|:------------------------|:-------|\n|Name                     |rawdata |\n|Number of rows           |14      |\n|Number of columns        |5       |\n|_______________________  |        |\n|Column type frequency:   |        |\n|character                |2       |\n|numeric                  |3       |\n|________________________ |        |\n|Group variables          |None    |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Height        |         0|             1|   1|   5|     0|       13|          0|\n|Gender        |         0|             1|   1|   2|     0|        5|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|      sd|  p0|    p25|   p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|-------:|---:|------:|-----:|---:|----:|:-----|\n|Weight        |         1|          0.93| 602.69| 1922.25|  45|  55.00|  70.0|  90| 7000|▇▁▁▁▁ |\n|Chol          |         0|          1.00| 200.79|   66.29| 120| 148.75| 171.5| 255|  310|▇▇▁▇▃ |\n|Agecat        |         0|          1.00|   1.79|    1.31|   0|   0.25|   2.0|   3|    3|▅▁▁▃▇ |\n:::\n:::\n\n\n\n\n# Cleaning\n\nBy inspecting the data as done above, we find some problems that need addressing:\n\nFirst, there is an entry for height which says \"sixty\" instead of a number. \nDoes that mean it should be a numeric 60? It somehow doesn't make sense since the weight is 60kg, which can't happen for a 60cm person (a baby).\nSince we don't know how to fix this, we might decide to remove the person. This \"sixty\" entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn't very meaningful. So let's fix that first.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd1 <- rawdata %>% dplyr::filter( Height != \"sixty\" ) %>% \n                  dplyr::mutate(Height = as.numeric(Height)) %>%\n  mutate(Agecat = as.factor(Agecat))\nskimr::skim(d1)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |d1   |\n|Number of rows           |13   |\n|Number of columns        |5    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |1    |\n|factor                   |1    |\n|numeric                  |3    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Gender        |         0|             1|   1|   2|     0|        5|          0|\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts       |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------|\n|Agecat        |         0|             1|FALSE   |        3|3: 6, 0: 4, 2: 3 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|      sd|  p0|    p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|-------:|---:|------:|---:|---:|----:|:-----|\n|Height        |         0|          1.00| 151.62|   46.46|   6| 154.00| 165| 175|  192|▁▁▁▂▇ |\n|Weight        |         1|          0.92| 647.92| 2000.48|  45|  54.75|  73|  90| 7000|▇▁▁▁▁ |\n|Chol          |         0|          1.00| 203.69|   68.07| 120| 145.00| 176| 259|  310|▇▆▁▇▃ |\n:::\n\n```{.r .cell-code}\nhist(d1$Height)\n```\n\n::: {.cell-output-display}\n![](processingfile2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don't know, we might need to remove this person, which we'll do here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2 <- d1 %>% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |d2   |\n|Number of rows           |13   |\n|Number of columns        |5    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |1    |\n|factor                   |1    |\n|numeric                  |3    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Gender        |         0|             1|   1|   2|     0|        5|          0|\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts       |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------|\n|Agecat        |         0|             1|FALSE   |        3|3: 6, 0: 4, 2: 3 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|      sd|  p0|    p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|-------:|---:|------:|---:|---:|----:|:-----|\n|Height        |         0|          1.00| 165.23|   16.52| 133| 155.00| 166| 178|  192|▂▇▆▆▃ |\n|Weight        |         1|          0.92| 647.92| 2000.48|  45|  54.75|  73|  90| 7000|▇▁▁▁▁ |\n|Chol          |         0|          1.00| 203.69|   68.07| 120| 145.00| 176| 259|  310|▇▆▁▇▃ |\n:::\n:::\n\n\nHeight values seem ok now.\n\nNow let's look at the `Weight` variable. There is a person with weight of 7000, which is impossible, and one person with missing weight.\nTo be able to analyze the data, we'll remove those individuals as well.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd3 <- d2 %>%  dplyr::filter(Weight != 7000) %>% tidyr::drop_na()\nskimr::skim(d3)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |d3   |\n|Number of rows           |11   |\n|Number of columns        |5    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |1    |\n|factor                   |1    |\n|numeric                  |3    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Gender        |         0|             1|   1|   2|     0|        5|          0|\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts       |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------|\n|Agecat        |         0|             1|FALSE   |        3|3: 6, 2: 3, 0: 2 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|    sd|  p0|   p25| p50|   p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|-----:|---:|-----:|---:|-----:|----:|:-----|\n|Height        |         0|             1| 167.09| 16.81| 133| 155.5| 166| 179.0|  192|▂▇▅▇▅ |\n|Weight        |         0|             1|  70.45| 20.65|  45|  54.5|  70|  85.0|  110|▇▂▃▃▂ |\n|Chol          |         0|             1| 216.36| 66.24| 120| 163.5| 235| 264.5|  310|▃▆▁▇▃ |\n:::\n:::\n\n\nNow checking the `Gender` variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd3$Gender <- as.factor(d3$Gender) \nd3$Emp_status <- as.factor(d3$Agecat)\nskimr::skim(d3)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |d3   |\n|Number of rows           |11   |\n|Number of columns        |6    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|factor                   |3    |\n|numeric                  |3    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts             |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------------|\n|Gender        |         0|             1|FALSE   |        5|M: 4, F: 3, O: 2, N: 1 |\n|Agecat        |         0|             1|FALSE   |        3|3: 6, 2: 3, 0: 2       |\n|Emp_status    |         0|             1|FALSE   |        3|3: 6, 2: 3, 0: 2       |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|    sd|  p0|   p25| p50|   p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|-----:|---:|-----:|---:|-----:|----:|:-----|\n|Height        |         0|             1| 167.09| 16.81| 133| 155.5| 166| 179.0|  192|▂▇▅▇▅ |\n|Weight        |         0|             1|  70.45| 20.65|  45|  54.5|  70|  85.0|  110|▇▂▃▃▂ |\n|Chol          |         0|             1| 216.36| 66.24| 120| 163.5| 235| 264.5|  310|▃▆▁▇▃ |\n:::\n:::\n\n\n\nNow we see that there is another NA, but it's not `NA` from R, instead it was loaded as character and is now considered as a category.\nWell proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I'm also using droplevels() to get rid of it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd4 <- d3 %>% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %>% droplevels()\nskimr::skim(d4)\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |d4   |\n|Number of rows           |9    |\n|Number of columns        |6    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|factor                   |3    |\n|numeric                  |3    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts       |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------|\n|Gender        |         0|             1|FALSE   |        3|M: 4, F: 3, O: 2 |\n|Agecat        |         0|             1|FALSE   |        3|3: 4, 2: 3, 0: 2 |\n|Emp_status    |         0|             1|FALSE   |        3|3: 4, 2: 3, 0: 2 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|   mean|    sd|  p0| p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|------:|-----:|---:|---:|---:|---:|----:|:-----|\n|Height        |         0|             1| 165.67| 15.98| 133| 156| 166| 178|  183|▂▁▃▃▇ |\n|Weight        |         0|             1|  70.11| 21.25|  45|  55|  70|  80|  110|▇▂▃▂▂ |\n|Chol          |         0|             1| 201.11| 63.16| 120| 160| 176| 243|  310|▅▇▁▇▂ |\n:::\n:::\n\n\n\nAll done, data is clean now. \n\nLet's assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprocesseddata2 <- d4\n```\n:::\n\n\n\n# Save data \n\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. \nThis preserves coding like factors, characters, numeric, etc.  If you save as CSV, that information would get lost.\nHowever, CSV is better for sharing with others since it's plain text. If you do CSV, you might want to write down somewhere what each variable is.\n\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsave_data_location <- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata2, file = save_data_location)\n```\n:::\n\n\nNote the use of the `here` package and `here` command to specify a path relative to the main project directory, that is the folder that contains the `.Rproj` file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\n\n# Notes\n\nRemoving anyone observation with \"faulty\" or missing data is one approach. It's often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information).\n\n\n\n",
    "supporting": [
      "processingfile2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}