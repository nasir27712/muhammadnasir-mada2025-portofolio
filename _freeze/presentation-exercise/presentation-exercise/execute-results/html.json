{
  "hash": "b358c59df1e9ef39ff59781ca0a868e0",
  "result": {
    "markdown": "---\ntitle: \"Data Presentation\" \noutput: html\neditor: visual\n---\n\n\n### Install Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/mn27712/MADA_NEW/muhammadnasir-mada2025-portofolio\n```\n:::\n\n```{.r .cell-code}\n#install.packages(\"patchwork\")  # This package is to redefine \"/\" operator for plot arrangement\nlibrary(patchwork)\n#install.packages(\"writexl\")\nlibrary(writexl)\nlibrary(haven)\n#install.packages(\"ggforce\")\nlibrary(ggforce)\n#install.packages(\"dplyr\")\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(lubridate)\n#install.packages(\"ggridges\") \nlibrary(ggridges)  #\nlibrary(forcats)\n#install.packages(\"gt\")\nlibrary(gt)\n#install.packages(\"gtExtras\", dependencies = TRUE)\nlibrary(gtExtras)\n```\n:::\n\n\n### About the dataset\n\nIn this exercise, I use US Weather History Dataset which contains weather summary of several cities. In this exercise, I only use Philadelphia as example, because the chart are same across the cities. I got the dataset and chart from fivethirtyeight. Link: https://fivethirtyeight.com/features/what-12-months-of-record-setting-temperatures-looks-like-across-the-u-s/\n\nDataset link: https://data.fivethirtyeight.com/\n\n@fig-temperature is the original graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#| label: fig-temperature\n#| fig-cap: \"Temperature Record in Philadelphia.\"\n#| echo: FALSE\nknitr::include_graphics(here(\"presentation-exercise\",\"results\",\"figures\",\"phila-ori.png\"))\n```\n\n::: {.cell-output-display}\n![](results/figures/phila-ori.png)\n:::\n:::\n\n\n### Read the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the dataset\ndata_loc <- here(\"presentation-exercise\", \"data\", \"KPHL.csv\") \ndata <- read_csv(data_loc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 365 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): date\ndbl (12): actual_mean_temp, actual_min_temp, actual_max_temp, average_min_te...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ndata$date <- as.Date(data$date, format=\"%Y-%m-%d\") # convert variable into date format \nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 13\n  date       actual_mean_temp actual_min_temp actual_max_temp average_min_temp\n  <date>                <dbl>           <dbl>           <dbl>            <dbl>\n1 2014-07-01               83              72              93               68\n2 2014-07-02               86              75              96               68\n3 2014-07-03               83              74              92               68\n4 2014-07-04               73              68              78               68\n5 2014-07-05               74              64              83               69\n6 2014-07-06               75              64              86               69\n# ℹ 8 more variables: average_max_temp <dbl>, record_min_temp <dbl>,\n#   record_max_temp <dbl>, record_min_temp_year <dbl>,\n#   record_max_temp_year <dbl>, actual_precipitation <dbl>,\n#   average_precipitation <dbl>, record_precipitation <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date            actual_mean_temp actual_min_temp actual_max_temp\n Min.   :2014-07-01   Min.   :10.00    Min.   : 2.00   Min.   :17.00  \n 1st Qu.:2014-09-30   1st Qu.:39.00    1st Qu.:33.00   1st Qu.:46.00  \n Median :2014-12-30   Median :59.00    Median :50.00   Median :69.00  \n Mean   :2014-12-30   Mean   :55.88    Mean   :47.27   Mean   :63.98  \n 3rd Qu.:2015-03-31   3rd Qu.:73.00    3rd Qu.:64.00   3rd Qu.:82.00  \n Max.   :2015-06-30   Max.   :86.00    Max.   :77.00   Max.   :96.00  \n average_min_temp average_max_temp record_min_temp  record_max_temp \n Min.   :25.00    Min.   :40.00    Min.   :-11.00   Min.   : 61.00  \n 1st Qu.:32.00    1st Qu.:49.00    1st Qu.:  9.00   1st Qu.: 73.00  \n Median :46.00    Median :66.00    Median : 29.00   Median : 88.00  \n Mean   :47.22    Mean   :64.72    Mean   : 28.03   Mean   : 84.99  \n 3rd Qu.:63.00    3rd Qu.:81.00    3rd Qu.: 46.00   3rd Qu.: 97.00  \n Max.   :70.00    Max.   :87.00    Max.   : 59.00   Max.   :106.00  \n record_min_temp_year record_max_temp_year actual_precipitation\n Min.   :1872         Min.   :1874         Min.   :0.0000      \n 1st Qu.:1930         1st Qu.:1931         1st Qu.:0.0000      \n Median :1960         Median :1957         Median :0.0000      \n Mean   :1947         Mean   :1958         Mean   :0.1245      \n 3rd Qu.:1969         3rd Qu.:1990         3rd Qu.:0.0500      \n Max.   :2014         Max.   :2014         Max.   :2.0100      \n average_precipitation record_precipitation\n Min.   :0.0800        Min.   :0.850       \n 1st Qu.:0.1000        1st Qu.:1.550       \n Median :0.1100        Median :1.880       \n Mean   :0.1138        Mean   :2.135       \n 3rd Qu.:0.1200        3rd Qu.:2.490       \n Max.   :0.1500        Max.   :8.020       \n```\n:::\n:::\n\n\n### Prompt to AI\n\nMe: Hi Good morning, thanks for being my best friend for coding activities.\n\nChatGPT: Of course, I will be always be your friend, what can I help you?\n\nMe: Today, I want to regenerate a chart. Here I provide the picture of the chart, the original link of the chart, and the dataset. Please generate the code to create the exact same chart, including the color, display, and also legend. Please look at the chart very details to be able to create the same chart. Please generate the code in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the plot\nplot_1 <- ggplot(data, aes(x = date)) +\n  # Shaded area for normal range\n  geom_ribbon(aes(ymin = average_min_temp, ymax = average_max_temp), fill = \"tan\", alpha = 0.5) +\n  # Shaded area for record range\n  geom_ribbon(aes(ymin = record_min_temp, ymax = record_max_temp), fill = \"grey\", alpha = 0.3) +\n  # Lines for actual min and max temps\n  geom_linerange(aes(ymin = actual_min_temp, ymax = actual_max_temp), color = \"black\") +\n  # Points for new record highs and lows\n  geom_point(data = filter(data, actual_max_temp > record_max_temp), aes(y = actual_max_temp), color = \"red\", size = 2) +\n  geom_point(data = filter(data, actual_min_temp < record_min_temp), aes(y = actual_min_temp), color = \"blue\", size = 2) +\n  # Labels and themes\n  labs(title = \"Philadelphia\",\n       x = NULL,\n       y = \"Temperature (°F)\",\n       caption = \"Data source: wunderground.com\\nAuthor: Randy Olson (randalolson.com / @randal_olson)\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"))\n\nplot(plot_1)\n```\n\n::: {.cell-output-display}\n![](presentation-exercise_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nMe: Hi, thank you for generating the code. However, there are some detail different with the original chart.\n\nHere, I modify by myself with some help from ChatGPT. In this step, I try to adjust the line. I see from the original chart, it is look more bar than line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the plot\nplot_2 <- ggplot(data, aes(x = date)) +\n  # Shaded area for normal range\n  geom_ribbon(aes(ymin = average_min_temp, ymax = average_max_temp), fill = \"#9B9B9B\", alpha = 1) +\n  # Shaded area for record range\n  geom_ribbon(aes(ymin = record_min_temp, ymax = record_max_temp), fill = \"#696651\", alpha = 0.3) +\n  geom_linerange(aes(ymin = actual_min_temp, ymax = actual_max_temp), color = \"black\", size = 0.8) +\n  geom_linerange(aes(ymin = actual_min_temp, ymax = actual_max_temp), color = \"#4B3B47\", size = 2, alpha = 0.8)+\n  geom_point(data = filter(data, actual_max_temp > record_max_temp), aes(y = actual_max_temp), color = \"red\", size = 10) +\n  geom_point(data = filter(data, actual_min_temp < record_min_temp), aes(y = actual_min_temp), color = \"blue\", size = 2) +\n  # Labels and themes\n  labs(title = \"Philadelphia\",\n       x = NULL,\n       y = \"Temperature (°F)\",\n       caption = \"Data source: wunderground.com\\nAuthor: Randy Olson (randalolson.com / @randal_olson)\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n```{.r .cell-code}\nplot(plot_2)\n```\n\n::: {.cell-output-display}\n![](presentation-exercise_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThis is the step where I change many things, including, put the date (months) in both sides (top and bottom, and put '14 below Jul, and '15 below Jan), I also put the temperature both side. In the previous chart, the grip also did not show every month. Therefore, I adjust the grip into each month and the temperature for every 10 Fahrenheit degree. I adjust the position of the caption (source and author).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_3 <- ggplot(data, aes(x = date)) +\n  # Shaded area for normal range\n  geom_ribbon(aes(ymin = average_min_temp, ymax = average_max_temp), fill = \"#9B9B9B\", alpha = 1) +\n  # Shaded area for record range\n  geom_ribbon(aes(ymin = record_min_temp, ymax = record_max_temp), fill = \"#696651\", alpha = 0.3) +\n  # Temperature ranges\n  geom_linerange(aes(ymin = actual_min_temp, ymax = actual_max_temp), color = \"black\", linewidth = 0.8) +\n  geom_linerange(aes(ymin = actual_min_temp, ymax = actual_max_temp), color = \"#4B3B47\", linewidth = 2, linetype = 1) +\n  # Record-breaking temperatures (Fixed)\n  geom_point(data = data %>% filter(!is.na(actual_max_temp), actual_max_temp > record_max_temp),\n             aes(x = date, y = actual_max_temp), color = \"red\", size = 3) +\n  geom_point(data = data %>% filter(!is.na(actual_min_temp), actual_min_temp < record_min_temp),\n             aes(x = date, y = actual_min_temp), color = \"blue\", size = 3) +\n  # Labels and themes\n  labs(title = \"Philadelphia\",\n       x = NULL,\n       y = \"Temperature (°F)\",\n       caption = \"Data source: wunderground.com\\nAuthor: Randy Olson (randalolson.com / @randal_olson)\") +\n  # Custom theme\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    panel.background = element_rect(fill = \"white\", color = NA),\n    panel.grid.major = element_line(color = \"grey50\", linetype = \"dashed\"),  # Remove empty linetype value\n    panel.grid.minor = element_blank(),\n    # Align caption to the left\n    plot.caption.position = \"plot\",\n    plot.caption = element_text(hjust = 0, face = \"italic\", size = 10)\n  ) +\n  # Define x-axis (date) for both top and bottom\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\",\n               sec.axis = dup_axis(name = NULL)) +  # Duplicate axis at top\n  # Define y-axis (temperature) for both left and right\n  scale_y_continuous(breaks = seq(-10, 110, 10),\n                     sec.axis = dup_axis(name = NULL),\n                     limits = c(min(data$record_min_temp) - 5, max(data$record_max_temp) + 5))  # Ensure all values fit\n\n# Plot the chart\nplot(plot_3)\n```\n\n::: {.cell-output-display}\n![](presentation-exercise_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThe chart looks much better. However, the new record for high and low temperature did not show up in the chart. Therefore, I try to create a new set then insert it into the chart.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identify new record highs and lows\nweather_data_subset <- data\nnew_max_records <- weather_data_subset %>%\n  filter(record_max_temp <= actual_max_temp)\n\nnew_min_records <- weather_data_subset %>%\n  filter(record_min_temp >= actual_min_temp)\n\n# Insert the new record into the plot \nplot1 <- ggplot(weather_data_subset, aes(x = date)) +\n  # Shaded area for normal range\n  geom_ribbon(aes(ymin = average_min_temp, ymax = average_max_temp), fill = \"#73736D\", alpha = 0.9) +\n  # Shaded area for record range\n  geom_ribbon(aes(ymin = record_min_temp, ymax = record_max_temp), fill =  \"#9a9a77\", alpha = 0.7) +\n  # Temperature ranges\n  geom_linerange(aes(ymin = actual_min_temp, ymax = actual_max_temp), color = \"black\", linewidth = 0.8) +\n  geom_linerange(aes(ymin = actual_min_temp, ymax = actual_max_temp), color = \"#4B3B47\", linewidth = 1, alpha = 0.8) +\n  # Record-breaking temperatures\n  geom_point(data = new_max_records, aes(x = date, y = actual_max_temp), color = \"red\", size = 2) +\n  geom_point(data = new_min_records, aes(x = date, y = actual_min_temp), color = \"lightblue\", size = 2) +\n  # create the legend \n  geom_rect(aes(xmin = as.Date(\"2014-08-10\") -4, xmax = as.Date(\"2014-08-11\") + 4, ymin = 0, ymax = 40), fill = \"#9a9a77\", alpha = 0.7) + # First bar\n  geom_rect(aes(xmin = as.Date(\"2014-08-10\") -4, xmax = as.Date(\"2014-08-11\") + 4, ymin = 10, ymax = 30), fill = \"#73736D\", alpha = 0.9) + # Second bar\n  geom_rect(aes(xmin = as.Date(\"2014-08-10\") -4, xmax = as.Date(\"2014-08-11\") + 4, ymin = 15, ymax = 25), fill = \"#4B3B47\", alpha = 0.8) +   # Third bar\n  ## Add two points inside the horizontal bar\n  geom_point(aes(x = as.Date(\"2014-08-10\"), y = 42), color = \"red\", size = 3) +  # Point 1\n  geom_point(aes(x = as.Date(\"2014-08-10\"), y = -2), color = \"lightblue\", size = 3) +  # Point 2\n  geom_text(aes(x = as.Date(\"2014-09-10\"), y = 25, label = \"New \\nrecord high\"), family= \"Serif\", color = \"#73736D\", vjust = -1, size = 3) + # adding text \n  geom_text(aes(x = as.Date(\"2014-09-10\"), y = -12, label = \"New \\nrecod low\"), family = \"Serif\",color = \"#73736D\", vjust = -1, size = 3) + # Adding text \n  geom_text(aes(x = as.Date(\"2014-07-10\"), y = 30, label = \"Record high\"), family =\"Serif\", color =\"#73736D\", vjust = -1, size = 3) + # adding text \n  geom_text(aes(x = as.Date(\"2014-07-10\"), y = 2, label = \"Recod low\"), family =\"Serif\", color = \"#73736D\", vjust = -1, size = 3) + # Adding text \n  geom_text(aes(x = as.Date(\"2014-09-10\"), y = 15, label = \"Normal range\"), family = \"Serif\", color =\"#73736D\", vjust = -1, size = 3) + # adding text \n  geom_text(aes(x = as.Date(\"2014-07-06\"), y = 14, label = \"Actual range\"), family = \"Serif\",color = \"#73736D\", vjust = -1, size = 3) + # Adding text \n  # Labels and themes\n  labs(title = \"Philadelphia\",\n       x = NULL,\n       y = \"Temperature (°F)\",\n       caption = \"Data source: wunderground.com\\nAuthor: Randy Olson (randalolson.com / @randal_olson)\") +\n  # Custom theme\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n    panel.background = element_rect(fill = \"white\", color = NA),\n    panel.grid.major = element_line(color = \"grey50\", linetype = \"longdash\", linewidth= 0.2),\n    panel.grid.minor = element_blank(),\n    plot.caption.position = \"plot\",\n    plot.caption = element_text(hjust = 0, size = 10),\n    axis.text.x = element_text(size = 12)  # Ensure x-axis labels are readable\n  ) +\n  # Custom x-axis labels\n  scale_x_date(\n    breaks = seq(as.Date(\"2014-07-01\"), as.Date(\"2015-07-01\"), by = \"1 month\"),\n    labels = c(\"Jul\\n'14\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\\n'15\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"), # Jul\\'14 is to place '14 under Jul, and the same for jan 15\n    sec.axis = dup_axis(name = NULL)\n  ) +\n  # Define y-axis (temperature)\n  scale_y_continuous(\n    breaks = seq(-10, 110, 10),\n    sec.axis = dup_axis(name = NULL),\n    limits = c(min(weather_data_subset$record_min_temp) - 5, \n               max(weather_data_subset$record_max_temp) + 5),\n    labels = function(x) paste0(x, \"°F\"))  # Add degree symbol to y-axis labels\n  \n# save the chart\n\nchart_location <- here( \"presentation-exercise\",\"results\", \"figures\", \"philadelphia.png\") # to set up location for the pictures created \nggsave(filename = chart_location, plot=plot1, width = 8, height = 6, units = \"in\", dpi = 300) # save the pictures created \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_point(aes(x = as.Date(\"2014-08-10\"), y = 42), color = \"red\", : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_point(aes(x = as.Date(\"2014-08-10\"), y = -2), color = \"lightblue\", : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_text(aes(x = as.Date(\"2014-09-10\"), y = 25, label = \"New \\nrecord high\"), : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_text(aes(x = as.Date(\"2014-09-10\"), y = -12, label = \"New \\nrecod low\"), : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_text(aes(x = as.Date(\"2014-07-10\"), y = 30, label = \"Record high\"), : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_text(aes(x = as.Date(\"2014-07-10\"), y = 2, label = \"Recod low\"), : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_text(aes(x = as.Date(\"2014-09-10\"), y = 15, label = \"Normal range\"), : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_text(aes(x = as.Date(\"2014-07-06\"), y = 14, label = \"Actual range\"), : All aesthetics have length 1, but the data has 365 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n```\n:::\n:::\n\n\nThe most challenging part in this chart is the legend. I spent hours to work on it. Finally I made it, but not exactly same.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Temperature Record in Philadelphia (imitation)](results/figures/philadelphia.png){#fig-temperature}\n:::\n:::\n\n\n# Part 2: Creating a table\n\nI create a table containing weather summary of Philadelphia in each season. To create this table, I got help from ChatGPT, I added multiple prompt step by step. I went through multiple steps.\n\nBefore asking AI to generate the code to create a table, I create subsets for each seasons.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#extract data\nweather_data <- data\n\n\n# Extract month for filtering\nweather_data$Month <- format(data$date, \"%m\")\n\n# Create subsets\nsummer <- filter(weather_data, Month %in% c(\"06\", \"07\", \"08\"))  # June - August\nfall <- filter(weather_data, Month %in% c(\"09\", \"10\", \"11\"))    # September - November\nwinter <- filter(weather_data, Month %in% c(\"12\", \"01\", \"02\"))  # December - February\nspring <- filter(weather_data, Month %in% c(\"03\", \"04\", \"05\"))  # March - May\n\nsummary(summer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date            actual_mean_temp actual_min_temp actual_max_temp\n Min.   :2014-07-01   Min.   :56.00    Min.   :53.00   Min.   :58.00  \n 1st Qu.:2014-07-23   1st Qu.:73.00    1st Qu.:64.00   1st Qu.:81.00  \n Median :2014-08-15   Median :76.00    Median :68.00   Median :84.50  \n Mean   :2014-11-12   Mean   :76.14    Mean   :67.30   Mean   :84.35  \n 3rd Qu.:2015-06-07   3rd Qu.:80.00    3rd Qu.:70.25   3rd Qu.:89.00  \n Max.   :2015-06-30   Max.   :86.00    Max.   :77.00   Max.   :96.00  \n average_min_temp average_max_temp record_min_temp record_max_temp \n Min.   :59.00    Min.   :79.00    Min.   :44.00   Min.   : 93.00  \n 1st Qu.:66.00    1st Qu.:84.00    1st Qu.:48.75   1st Qu.: 98.00  \n Median :68.00    Median :86.00    Median :52.00   Median : 99.00  \n Mean   :67.09    Mean   :85.04    Mean   :51.68   Mean   : 99.16  \n 3rd Qu.:69.00    3rd Qu.:87.00    3rd Qu.:55.00   3rd Qu.:100.25  \n Max.   :70.00    Max.   :87.00    Max.   :59.00   Max.   :106.00  \n record_min_temp_year record_max_temp_year actual_precipitation\n Min.   :1884         Min.   :1888         Min.   :0.0000      \n 1st Qu.:1952         1st Qu.:1930         1st Qu.:0.0000      \n Median :1963         Median :1957         Median :0.0000      \n Mean   :1960         Mean   :1961         Mean   :0.1818      \n 3rd Qu.:1972         3rd Qu.:1994         3rd Qu.:0.1950      \n Max.   :1999         Max.   :2012         Max.   :1.9600      \n average_precipitation record_precipitation    Month          \n Min.   :0.0900        Min.   :1.040        Length:92         \n 1st Qu.:0.1100        1st Qu.:1.958        Class :character  \n Median :0.1200        Median :2.440        Mode  :character  \n Mean   :0.1226        Mean   :2.689                          \n 3rd Qu.:0.1400        3rd Qu.:3.050                          \n Max.   :0.1500        Max.   :8.020                          \n```\n:::\n\n```{.r .cell-code}\nsummary(fall)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date            actual_mean_temp actual_min_temp actual_max_temp\n Min.   :2014-09-01   Min.   :28.00    Min.   :20.00   Min.   :36.00  \n 1st Qu.:2014-09-23   1st Qu.:50.50    1st Qu.:42.00   1st Qu.:57.00  \n Median :2014-10-16   Median :61.00    Median :52.00   Median :70.00  \n Mean   :2014-10-16   Mean   :58.79    Mean   :50.54   Mean   :66.55  \n 3rd Qu.:2014-11-07   3rd Qu.:67.00    3rd Qu.:59.00   3rd Qu.:75.00  \n Max.   :2014-11-30   Max.   :84.00    Max.   :74.00   Max.   :93.00  \n average_min_temp average_max_temp record_min_temp record_max_temp \n Min.   :35.00    Min.   :50.00    Min.   : 8.00   Min.   : 70.00  \n 1st Qu.:41.50    1st Qu.:59.00    1st Qu.:25.00   1st Qu.: 78.00  \n Median :48.00    Median :67.00    Median :31.00   Median : 87.00  \n Mean   :49.34    Mean   :66.95    Mean   :31.53   Mean   : 85.23  \n 3rd Qu.:57.50    3rd Qu.:75.00    3rd Qu.:39.00   3rd Qu.: 92.00  \n Max.   :65.00    Max.   :83.00    Max.   :53.00   Max.   :102.00  \n record_min_temp_year record_max_temp_year actual_precipitation\n Min.   :1875         Min.   :1879         Min.   :0.0000      \n 1st Qu.:1944         1st Qu.:1927         1st Qu.:0.0000      \n Median :1961         Median :1949         Median :0.0000      \n Mean   :1954         Mean   :1949         Mean   :0.0911      \n 3rd Qu.:1969         3rd Qu.:1975         3rd Qu.:0.0100      \n Max.   :2013         Max.   :2014         Max.   :1.0500      \n average_precipitation record_precipitation    Month          \n Min.   :0.0800        Min.   :0.900        Length:91         \n 1st Qu.:0.1000        1st Qu.:1.600        Class :character  \n Median :0.1100        Median :1.950        Mode  :character  \n Mean   :0.1093        Mean   :2.276                          \n 3rd Qu.:0.1200        3rd Qu.:2.725                          \n Max.   :0.1400        Max.   :6.630                          \n```\n:::\n\n```{.r .cell-code}\nsummary(winter)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date            actual_mean_temp actual_min_temp actual_max_temp\n Min.   :2014-12-01   Min.   :10.00    Min.   : 2.00   Min.   :17.00  \n 1st Qu.:2014-12-23   1st Qu.:27.25    1st Qu.:20.00   1st Qu.:34.00  \n Median :2015-01-14   Median :34.00    Median :27.00   Median :41.00  \n Mean   :2015-01-14   Mean   :33.06    Mean   :25.74   Mean   :39.87  \n 3rd Qu.:2015-02-05   3rd Qu.:39.75    3rd Qu.:33.00   3rd Qu.:45.75  \n Max.   :2015-02-28   Max.   :56.00    Max.   :47.00   Max.   :65.00  \n average_min_temp average_max_temp record_min_temp   record_max_temp\n Min.   :25.00    Min.   :40.00    Min.   :-11.000   Min.   :61.00  \n 1st Qu.:26.00    1st Qu.:41.00    1st Qu.:  0.000   1st Qu.:65.00  \n Median :27.00    Median :42.00    Median :  3.000   Median :68.00  \n Mean   :27.84    Mean   :42.94    Mean   :  2.778   Mean   :68.03  \n 3rd Qu.:29.00    3rd Qu.:45.00    3rd Qu.:  6.750   3rd Qu.:70.00  \n Max.   :34.00    Max.   :50.00    Max.   : 15.000   Max.   :79.00  \n record_min_temp_year record_max_temp_year actual_precipitation\n Min.   :1875         Min.   :1874         Min.   :0.0000      \n 1st Qu.:1897         1st Qu.:1941         1st Qu.:0.0000      \n Median :1942         Median :1968         Median :0.0000      \n Mean   :1937         Mean   :1963         Mean   :0.1128      \n 3rd Qu.:1977         3rd Qu.:1996         3rd Qu.:0.0475      \n Max.   :2014         Max.   :2013         Max.   :1.8400      \n average_precipitation record_precipitation    Month          \n Min.   :0.0900        Min.   :0.900        Length:90         \n 1st Qu.:0.0900        1st Qu.:1.343        Class :character  \n Median :0.1000        Median :1.585        Mode  :character  \n Mean   :0.1027        Mean   :1.687                          \n 3rd Qu.:0.1100        3rd Qu.:1.847                          \n Max.   :0.1300        Max.   :3.860                          \n```\n:::\n\n```{.r .cell-code}\nsummary(spring)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date            actual_mean_temp actual_min_temp actual_max_temp\n Min.   :2015-03-01   Min.   :19.00    Min.   :11.00   Min.   :26.00  \n 1st Qu.:2015-03-23   1st Qu.:44.00    1st Qu.:34.00   1st Qu.:51.75  \n Median :2015-04-15   Median :56.00    Median :46.00   Median :66.50  \n Mean   :2015-04-15   Mean   :55.09    Mean   :45.04   Mean   :64.67  \n 3rd Qu.:2015-05-08   3rd Qu.:65.50    3rd Qu.:54.00   3rd Qu.:77.00  \n Max.   :2015-05-31   Max.   :81.00    Max.   :71.00   Max.   :92.00  \n average_min_temp average_max_temp record_min_temp record_max_temp\n Min.   :30.00    Min.   :48.00    Min.   : 5.00   Min.   :71.00  \n 1st Qu.:36.75    1st Qu.:55.75    1st Qu.:14.00   1st Qu.:82.00  \n Median :44.00    Median :64.00    Median :27.00   Median :90.00  \n Mean   :44.22    Mean   :63.51    Mean   :25.62   Mean   :87.16  \n 3rd Qu.:51.25    3rd Qu.:71.25    3rd Qu.:35.25   3rd Qu.:92.25  \n Max.   :59.00    Max.   :78.00    Max.   :43.00   Max.   :97.00  \n record_min_temp_year record_max_temp_year actual_precipitation\n Min.   :1872         Min.   :1880         Min.   :0.0000      \n 1st Qu.:1894         1st Qu.:1936         1st Qu.:0.0000      \n Median :1956         Median :1962         Median :0.0000      \n Mean   :1938         Mean   :1958         Mean   :0.1118      \n 3rd Qu.:1966         3rd Qu.:1990         3rd Qu.:0.0300      \n Max.   :2002         Max.   :2013         Max.   :2.0100      \n average_precipitation record_precipitation    Month          \n Min.   :0.1000        Min.   :0.850        Length:92         \n 1st Qu.:0.1100        1st Qu.:1.478        Class :character  \n Median :0.1200        Median :1.765        Mode  :character  \n Mean   :0.1202        Mean   :1.882                          \n 3rd Qu.:0.1300        3rd Qu.:2.192                          \n Max.   :0.1400        Max.   :4.420                          \n```\n:::\n:::\n\n\nIn this step, I used ChatGPT to create table. Here is the prompt that I used:\n\nNow I have 4 subsets: summer, fall,, winter, and spring. Those subsets have actual_mean_temp, average_min_temp, average_max_temp, average_precipitation. I want to create a beautiful and easy read table. Please give me idea and step by step, including code.\n\nThe first table generated did not look good. Therefore, I add more prompt in each feature that I want. For example, I want to add icons representing the season, I want to arrange indicators in the column, and seasons as rows. I actually added more prompt.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summarize the data for each season\nsummary_table <- bind_rows(\n  summer %>% summarise(Season = \"Summer\", \n                       `Avg Min Temp (°F)` = mean(average_min_temp, na.rm = TRUE),\n                       `Avg Mean Temp (°F)` = mean(actual_mean_temp, na.rm = TRUE),\n                       `Avg Max Temp (°F)` = mean(average_max_temp, na.rm = TRUE),\n                       `Avg Precipitation (inches)` = mean(average_precipitation, na.rm = TRUE)),\n  fall %>% summarise(Season = \"Fall\", \n                     `Avg Min Temp (°F)` = mean(average_min_temp, na.rm = TRUE),\n                     `Avg Mean Temp (°F)` = mean(actual_mean_temp, na.rm = TRUE),\n                     `Avg Max Temp (°F)` = mean(average_max_temp, na.rm = TRUE),\n                     `Avg Precipitation (inches)` = mean(average_precipitation, na.rm = TRUE)),\n  winter %>% summarise(Season = \"Winter\", \n                       `Avg Min Temp (°F)` = mean(average_min_temp, na.rm = TRUE),\n                       `Avg Mean Temp (°F)` = mean(actual_mean_temp, na.rm = TRUE),\n                       `Avg Max Temp (°F)` = mean(average_max_temp, na.rm = TRUE),\n                       `Avg Precipitation (inches)` = mean(average_precipitation, na.rm = TRUE)),\n  spring %>% summarise(Season = \"Spring\", \n                       `Avg Min Temp (°F)` = mean(average_min_temp, na.rm = TRUE),\n                       `Avg Mean Temp (°F)` = mean(actual_mean_temp, na.rm = TRUE),\n                       `Avg Max Temp (°F)` = mean(average_max_temp, na.rm = TRUE),\n                       `Avg Precipitation (inches)` = mean(average_precipitation, na.rm = TRUE))\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add seasonal icons in a separate column\nsummary_table <- summary_table %>%\n  mutate(` ` = c(\"☀️\", \"🍂\", \"❄️\", \"🌸\"))  # Adding icons for Summer, Fall, Winter, Spring\n\n# Create a styled gt table\nstyled_table <- summary_table %>%\n  gt() %>%\n  tab_header(\n    title = md(\"**Philadelphia Seasonal Weather Summary**\"),\n    subtitle = md(\"*Weather data from July 2014 - June 2015*\")\n  ) %>%\n  tab_spanner(label = \"Temperature (°F)\", columns = c(`Avg Min Temp (°F)`, `Avg Mean Temp (°F)`, `Avg Max Temp (°F)`)) %>%\n  tab_spanner(label = \"Precipitation\", columns = `Avg Precipitation (inches)`) %>%\n  fmt_number(\n    columns = where(is.numeric),\n    decimals = 1\n  ) %>%\n  cols_move_to_start(columns = \"Season\") %>%\n  cols_move(columns = \" \", after = \"Season\") %>%  # Moves icon column after season\n  cols_align(\n    align = \"left\",\n    columns = \"Season\"  # Keep Season column left-aligned\n  ) %>%\n  cols_align(\n    align = \"center\",\n    columns = c(` `, `Avg Min Temp (°F)`, `Avg Mean Temp (°F)`, `Avg Max Temp (°F)`, `Avg Precipitation (inches)`)  # Center all other columns\n  ) %>%\n  tab_source_note(md(\"**Source:** https://www.wunderground.com/, July 2014 - June 2015.\")) %>%\n  tab_footnote(footnote = \"Precipitation measured in inches\", locations = cells_column_labels(columns = `Avg Precipitation (inches)`))%>%\n  data_color(\n    columns = c(`Avg Min Temp (°F)`, `Avg Max Temp (°F)`),\n    colors = scales::col_numeric(\n      palette = c(\"blue\", \"white\", \"red\"),\n      domain = range(summary_table$`Avg Min Temp (°F)`, summary_table$`Avg Max Temp (°F)`)\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Since gt v0.9.0, the `colors` argument has been deprecated.\n• Please use the `fn` argument instead.\nThis warning is displayed once every 8 hours.\n```\n:::\n\n```{.r .cell-code}\ntable_file1 = here(\"presentation-exercise\",\"results\", \"tables\", \"weather.rds\")\nsaveRDS(styled_table, file = table_file1)\n\n# Print the table\nstyled_table\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"qdifezbwnn\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#qdifezbwnn table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#qdifezbwnn thead, #qdifezbwnn tbody, #qdifezbwnn tfoot, #qdifezbwnn tr, #qdifezbwnn td, #qdifezbwnn th {\n  border-style: none;\n}\n\n#qdifezbwnn p {\n  margin: 0;\n  padding: 0;\n}\n\n#qdifezbwnn .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#qdifezbwnn .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#qdifezbwnn .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#qdifezbwnn .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#qdifezbwnn .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#qdifezbwnn .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#qdifezbwnn .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#qdifezbwnn .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#qdifezbwnn .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#qdifezbwnn .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#qdifezbwnn .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#qdifezbwnn .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#qdifezbwnn .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#qdifezbwnn .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#qdifezbwnn .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qdifezbwnn .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#qdifezbwnn .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#qdifezbwnn .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#qdifezbwnn .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qdifezbwnn .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#qdifezbwnn .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qdifezbwnn .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#qdifezbwnn .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qdifezbwnn .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#qdifezbwnn .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#qdifezbwnn .gt_left {\n  text-align: left;\n}\n\n#qdifezbwnn .gt_center {\n  text-align: center;\n}\n\n#qdifezbwnn .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#qdifezbwnn .gt_font_normal {\n  font-weight: normal;\n}\n\n#qdifezbwnn .gt_font_bold {\n  font-weight: bold;\n}\n\n#qdifezbwnn .gt_font_italic {\n  font-style: italic;\n}\n\n#qdifezbwnn .gt_super {\n  font-size: 65%;\n}\n\n#qdifezbwnn .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#qdifezbwnn .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#qdifezbwnn .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#qdifezbwnn .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#qdifezbwnn .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#qdifezbwnn .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#qdifezbwnn .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#qdifezbwnn .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#qdifezbwnn div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"6\" class=\"gt_heading gt_title gt_font_normal\" style><span data-qmd-base64=\"PHN0cm9uZz5QaGlsYWRlbHBoaWEgU2Vhc29uYWwgV2VhdGhlciBTdW1tYXJ5PC9zdHJvbmc+\"><span class='gt_from_md'><strong>Philadelphia Seasonal Weather Summary</strong></span></span></td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"6\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"PGVtPldlYXRoZXIgZGF0YSBmcm9tIEp1bHkgMjAxNCAtIEp1bmUgMjAxNTwvZW0+\"><span class='gt_from_md'><em>Weather data from July 2014 - June 2015</em></span></span></td>\n    </tr>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Season\">Season</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"a-\"> </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Temperature (°F)\">\n        <div class=\"gt_column_spanner\">Temperature (°F)</div>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Precipitation\">\n        <div class=\"gt_column_spanner\">Precipitation</div>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg-Min-Temp-(°F)\">Avg Min Temp (°F)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg-Mean-Temp-(°F)\">Avg Mean Temp (°F)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg-Max-Temp-(°F)\">Avg Max Temp (°F)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Avg-Precipitation-(inches)\">Avg Precipitation (inches)<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Season\" class=\"gt_row gt_left\">Summer</td>\n<td headers=\" \" class=\"gt_row gt_center\">☀️</td>\n<td headers=\"Avg Min Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #FFB7A0; color: #000000;\">67.1</td>\n<td headers=\"Avg Mean Temp (°F)\" class=\"gt_row gt_center\">76.1</td>\n<td headers=\"Avg Max Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #FF0000; color: #FFFFFF;\">85.0</td>\n<td headers=\"Avg Precipitation (inches)\" class=\"gt_row gt_center\">0.1</td></tr>\n    <tr><td headers=\"Season\" class=\"gt_row gt_left\">Fall</td>\n<td headers=\" \" class=\"gt_row gt_center\">🍂</td>\n<td headers=\"Avg Min Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #DCC5FF; color: #000000;\">49.3</td>\n<td headers=\"Avg Mean Temp (°F)\" class=\"gt_row gt_center\">58.8</td>\n<td headers=\"Avg Max Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #FFB8A2; color: #000000;\">66.9</td>\n<td headers=\"Avg Precipitation (inches)\" class=\"gt_row gt_center\">0.1</td></tr>\n    <tr><td headers=\"Season\" class=\"gt_row gt_left\">Winter</td>\n<td headers=\" \" class=\"gt_row gt_center\">❄️</td>\n<td headers=\"Avg Min Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #0000FF; color: #FFFFFF;\">27.8</td>\n<td headers=\"Avg Mean Temp (°F)\" class=\"gt_row gt_center\">33.1</td>\n<td headers=\"Avg Max Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #B892FF; color: #000000;\">42.9</td>\n<td headers=\"Avg Precipitation (inches)\" class=\"gt_row gt_center\">0.1</td></tr>\n    <tr><td headers=\"Season\" class=\"gt_row gt_left\">Spring</td>\n<td headers=\" \" class=\"gt_row gt_center\">🌸</td>\n<td headers=\"Avg Min Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #C09CFF; color: #000000;\">44.2</td>\n<td headers=\"Avg Mean Temp (°F)\" class=\"gt_row gt_center\">55.1</td>\n<td headers=\"Avg Max Temp (°F)\" class=\"gt_row gt_center\" style=\"background-color: #FFD0BF; color: #000000;\">63.5</td>\n<td headers=\"Avg Precipitation (inches)\" class=\"gt_row gt_center\">0.1</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"6\"><span data-qmd-base64=\"PHN0cm9uZz5Tb3VyY2U6PC9zdHJvbmc+IDxhIGhyZWY9Imh0dHBzOi8vd3d3Lnd1bmRlcmdyb3VuZC5jb20vIj5odHRwczovL3d3dy53dW5kZXJncm91bmQuY29tLzwvYT4sIEp1bHkgMjAxNCAtIEp1bmUgMjAxNS4=\"><span class='gt_from_md'><strong>Source:</strong> <a href=\"https://www.wunderground.com/\">https://www.wunderground.com/</a>, July 2014 - June 2015.</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"6\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> Precipitation measured in inches</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n",
    "supporting": [
      "presentation-exercise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}