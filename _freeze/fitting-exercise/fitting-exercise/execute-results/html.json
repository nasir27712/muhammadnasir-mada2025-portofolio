{
  "hash": "08b4ef28ca1276ac0708e1d4976cf96d",
  "result": {
    "markdown": "---\ntitle: \"Fitting Models Exercise\" \noutput: html\neditor: visual\n---\n\n\n### Install Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"tidyverse\")\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/mn27712/MADA_NEW/muhammadnasir-mada2025-portofolio\n```\n:::\n\n```{.r .cell-code}\n#install.packages(\"patchwork\")  # This package is to redefine \"/\" operator for plot arrangement\nlibrary(patchwork)\n#install.packages(\"writexl\")\nlibrary(writexl)\nlibrary(haven)\n#install.packages(\"ggforce\")\nlibrary(ggforce)\ninstall.packages(\"dplyr\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe following package(s) will be installed:\n- dplyr [1.1.4]\nThese packages will be installed into \"~/MADA_NEW/muhammadnasir-mada2025-portofolio/renv/library/windows/R-4.4/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing dplyr ...                          OK [linked from cache]\nSuccessfully installed 1 package in 27 milliseconds.\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(lubridate)\n#install.packages(\"ggridges\") \nlibrary(ggridges)  #\nlibrary(forcats)\n#install.packages(\"gt\")\nlibrary(gt)\n#install.packages(\"gtExtras\", dependencies = TRUE)\nlibrary(gtExtras)\n#install.packages(\"gtsummary\")\nlibrary(gtsummary)   \n#install.packages(\"cli\")\nlibrary(cli)\n#install.packages(\"tidymodels\")\nlibrary(tidymodels)  # for the parsnip package, along with the rest of tidymodels\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.4.0     ✔ tune         1.3.0\n✔ infer        1.0.7     ✔ workflows    1.2.0\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.3.1     ✔ yardstick    1.3.2\n✔ recipes      1.2.0     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n```\n:::\n\n```{.r .cell-code}\n#install.packages(\"broom.mixed\")\nlibrary(broom.mixed) # for converting bayesian models to tidy tibbles\n#install.packages(\"dotwhisker\")\nlibrary(dotwhisker)  # for visualizing regression results\n#install.packages(\"ggcorrplot\")\nlibrary(ggcorrplot)\n#install.packages(\"corrplot\")\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ncorrplot 0.95 loaded\n```\n:::\n\n```{.r .cell-code}\n#install.packages(\"ggpubr\")# combine plot\n# Load the library\nlibrary(ggpubr)\n\n#install.packages(\"broom\") \nlibrary(broom)# Installs broom separately (optional)\n#install.packages(\"gtsummary\")\nlibrary(gtsummary)\n\n\n#install.packages(\"rsample\")\n#install.packages(\"purrr\")\nlibrary(rsample)\nlibrary(purrr)\n```\n:::\n\n\n### Read the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Install package for the data \n#install.packages(\"nlmixr2data\")\n#ibrary(nlmixr2data)\n\n# Load the dataset\ndata_loc <- here(\"fitting-exercise\", \"data\", \"Mavoglurant_A2121_nmpk.csv\") \ndata <- read_csv(data_loc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 2678 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (17): ID, CMT, EVID, EVI2, MDV, DV, LNDV, AMT, TIME, DOSE, OCC, RATE, AG...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 17\n     ID   CMT  EVID  EVI2   MDV    DV  LNDV   AMT  TIME  DOSE   OCC  RATE   AGE\n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1   793     1     1     1     1     0  0       25 0        25     1    75    42\n2   793     2     0     0     0   491  6.20     0 0.2      25     1     0    42\n3   793     2     0     0     0   605  6.40     0 0.25     25     1     0    42\n4   793     2     0     0     0   556  6.32     0 0.367    25     1     0    42\n5   793     2     0     0     0   310  5.74     0 0.533    25     1     0    42\n6   793     2     0     0     0   237  5.47     0 0.7      25     1     0    42\n# ℹ 4 more variables: SEX <dbl>, RACE <dbl>, WT <dbl>, HT <dbl>\n```\n:::\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2678   17\n```\n:::\n\n```{.r .cell-code}\ncolnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ID\"   \"CMT\"  \"EVID\" \"EVI2\" \"MDV\"  \"DV\"   \"LNDV\" \"AMT\"  \"TIME\" \"DOSE\"\n[11] \"OCC\"  \"RATE\" \"AGE\"  \"SEX\"  \"RACE\" \"WT\"   \"HT\"  \n```\n:::\n:::\n\n\n***Note for the variables :***\n\n-   ID: Subject ID\n\n-   CMT: Compartment Number\n\n-   EVID: Event ID\n\n-   MDV: Missing DV\n\n-   DV: Dependent Variable, Mavoglurant\n\n-   AMT: Dose Amount Keyword\n\n-   TIME: Time (hr)\n\n-   DOSE: Dose\n\n-   OCC: Occasion\n\n-   RATE: Rate\n\n-   AGE: Age\n\n-   SEX: Sex (1= male, 2= female) \\# (based on the paper referred )\n\n-   WT: Weight\n\n-   HT: Height\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       ID             CMT             EVID              EVI2       \n Min.   :793.0   Min.   :1.000   Min.   :0.00000   Min.   :0.0000  \n 1st Qu.:832.0   1st Qu.:2.000   1st Qu.:0.00000   1st Qu.:0.0000  \n Median :860.0   Median :2.000   Median :0.00000   Median :0.0000  \n Mean   :858.8   Mean   :1.926   Mean   :0.07394   Mean   :0.1613  \n 3rd Qu.:888.0   3rd Qu.:2.000   3rd Qu.:0.00000   3rd Qu.:0.0000  \n Max.   :915.0   Max.   :2.000   Max.   :1.00000   Max.   :4.0000  \n      MDV                DV               LNDV            AMT        \n Min.   :0.00000   Min.   :   0.00   Min.   :0.000   Min.   : 0.000  \n 1st Qu.:0.00000   1st Qu.:  23.52   1st Qu.:3.158   1st Qu.: 0.000  \n Median :0.00000   Median :  74.20   Median :4.306   Median : 0.000  \n Mean   :0.09373   Mean   : 179.93   Mean   :4.085   Mean   : 2.763  \n 3rd Qu.:0.00000   3rd Qu.: 283.00   3rd Qu.:5.645   3rd Qu.: 0.000  \n Max.   :1.00000   Max.   :1730.00   Max.   :7.456   Max.   :50.000  \n      TIME             DOSE            OCC             RATE       \n Min.   : 0.000   Min.   :25.00   Min.   :1.000   Min.   :  0.00  \n 1st Qu.: 0.583   1st Qu.:25.00   1st Qu.:1.000   1st Qu.:  0.00  \n Median : 2.250   Median :37.50   Median :1.000   Median :  0.00  \n Mean   : 5.851   Mean   :37.37   Mean   :1.378   Mean   : 16.55  \n 3rd Qu.: 6.363   3rd Qu.:50.00   3rd Qu.:2.000   3rd Qu.:  0.00  \n Max.   :48.217   Max.   :50.00   Max.   :2.000   Max.   :300.00  \n      AGE            SEX             RACE              WT        \n Min.   :18.0   Min.   :1.000   Min.   : 1.000   Min.   : 56.60  \n 1st Qu.:26.0   1st Qu.:1.000   1st Qu.: 1.000   1st Qu.: 73.30  \n Median :31.0   Median :1.000   Median : 1.000   Median : 82.60  \n Mean   :32.9   Mean   :1.128   Mean   : 7.415   Mean   : 83.16  \n 3rd Qu.:40.0   3rd Qu.:1.000   3rd Qu.: 2.000   3rd Qu.: 90.60  \n Max.   :50.0   Max.   :2.000   Max.   :88.000   Max.   :115.30  \n       HT       \n Min.   :1.520  \n 1st Qu.:1.710  \n Median :1.780  \n Mean   :1.762  \n 3rd Qu.:1.820  \n Max.   :1.930  \n```\n:::\n\n```{.r .cell-code}\n(data$ID)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   [1] 793 793 793 793 793 793 793 793 793 793 793 793 793 793 793 793 794 794\n  [19] 794 794 794 794 794 794 794 794 794 794 794 794 794 794 795 795 795 795\n  [37] 795 795 795 795 795 795 795 795 795 795 795 795 796 796 796 796 796 796\n  [55] 796 796 796 796 796 796 796 796 796 796 797 797 797 797 797 797 797 797\n  [73] 797 797 797 797 797 797 797 797 798 798 798 798 798 798 798 798 798 798\n  [91] 798 798 798 798 798 798 799 799 799 799 799 799 799 799 799 799 799 799\n [109] 799 799 799 799 800 800 800 800 800 800 800 800 800 800 800 800 800 800\n [127] 800 800 801 801 801 801 801 801 801 801 801 801 801 801 801 801 801 801\n [145] 802 802 802 802 802 802 802 802 802 802 802 802 802 802 802 802 803 803\n [163] 803 803 803 803 803 803 803 803 803 803 803 803 803 803 804 804 804 804\n [181] 804 804 804 804 804 804 804 804 804 804 804 804 805 805 805 805 805 805\n [199] 805 805 805 805 805 805 805 805 805 805 806 806 806 806 806 806 806 806\n [217] 806 806 806 806 806 806 806 806 807 807 807 807 807 807 807 807 807 807\n [235] 807 807 807 807 807 808 808 808 808 808 808 808 808 808 808 808 808 808\n [253] 808 808 808 809 809 809 809 809 809 809 809 809 809 809 809 809 809 809\n [271] 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 811 811\n [289] 811 811 811 811 811 811 811 811 811 811 811 811 811 811 812 812 812 812\n [307] 812 812 812 812 812 812 812 812 812 812 812 813 813 813 813 813 813 813\n [325] 813 813 813 813 813 813 813 813 813 814 814 814 814 814 814 814 814 814\n [343] 814 814 814 814 814 814 814 815 815 815 815 815 815 815 815 815 815 815\n [361] 815 815 815 815 815 816 816 816 816 816 816 816 816 816 816 816 816 816\n [379] 816 816 816 817 817 817 817 817 817 817 817 817 817 817 817 817 817 817\n [397] 817 818 818 818 818 818 818 818 818 818 818 818 818 818 818 818 818 819\n [415] 819 819 819 819 819 819 819 819 819 819 819 819 819 819 819 820 820 820\n [433] 820 820 820 820 820 820 820 820 820 820 820 820 820 821 821 821 821 821\n [451] 821 821 821 821 821 821 821 821 821 821 821 822 822 822 822 822 822 822\n [469] 822 822 822 822 822 822 822 822 822 823 823 823 823 823 823 823 823 823\n [487] 823 823 823 823 823 823 823 824 824 824 824 824 824 824 824 824 824 824\n [505] 824 824 824 824 824 825 825 825 825 825 825 825 825 825 825 825 825 825\n [523] 825 825 825 826 826 826 826 826 826 826 826 826 826 826 826 826 826 826\n [541] 826 827 827 827 827 827 827 827 827 827 827 827 827 827 827 827 827 828\n [559] 828 828 828 828 828 828 828 828 828 828 828 828 828 828 828 829 829 829\n [577] 829 829 829 829 829 829 829 829 829 829 829 829 829 829 829 829 829 829\n [595] 829 829 829 829 829 830 830 830 830 830 830 830 830 830 830 830 830 830\n [613] 830 830 830 830 830 830 830 830 830 830 830 830 830 831 831 831 831 831\n [631] 831 831 831 831 831 831 831 831 831 831 831 831 831 831 831 831 831 831\n [649] 831 831 831 832 832 832 832 832 832 832 832 832 832 832 832 832 832 832\n [667] 832 832 832 832 832 832 832 832 832 832 832 833 833 833 833 833 833 833\n [685] 833 833 833 833 833 833 833 833 833 833 833 833 833 833 833 833 833 833\n [703] 833 834 834 834 834 834 834 834 834 834 834 834 834 834 834 834 834 834\n [721] 834 834 834 834 834 834 834 834 834 835 835 835 835 835 835 835 835 835\n [739] 835 835 835 835 835 835 835 835 835 835 835 835 835 835 835 835 835 836\n [757] 836 836 836 836 836 836 836 836 836 836 836 836 836 836 836 836 836 836\n [775] 836 836 836 836 836 836 836 837 837 837 837 837 837 837 837 837 837 837\n [793] 837 837 837 837 837 837 837 837 837 837 837 837 837 837 837 838 838 838\n [811] 838 838 838 838 838 838 838 838 838 838 838 838 838 838 838 838 838 838\n [829] 838 838 838 838 838 840 840 840 840 840 840 840 840 840 840 840 840 840\n [847] 840 840 840 840 840 840 840 840 840 840 840 840 840 841 841 841 841 841\n [865] 841 841 841 841 841 841 841 841 841 841 841 841 841 841 841 841 841 841\n [883] 841 841 841 842 842 842 842 842 842 842 842 842 842 842 842 842 842 842\n [901] 842 842 842 842 842 842 842 842 842 842 842 843 843 843 843 843 843 843\n [919] 843 843 843 843 843 843 843 843 843 843 843 843 843 843 843 843 843 843\n [937] 843 844 844 844 844 844 844 844 844 844 844 844 844 844 844 844 844 844\n [955] 844 844 844 844 844 844 844 844 844 845 845 845 845 845 845 845 845 845\n [973] 845 845 845 845 845 845 845 845 845 845 845 845 845 845 845 845 845 846\n [991] 846 846 846 846 846 846 846 846 846 846 846 846 846 846 846 846 846 846\n[1009] 846 846 846 846 846 846 846 847 847 847 847 847 847 847 847 847 847 847\n[1027] 847 847 847 847 847 847 847 847 847 847 847 847 847 847 847 848 848 848\n[1045] 848 848 848 848 848 848 848 848 848 848 848 848 848 848 848 848 848 848\n[1063] 848 848 848 848 848 849 849 849 849 849 849 849 849 849 849 849 849 849\n[1081] 849 849 849 849 849 849 849 849 849 849 849 849 849 850 850 850 850 850\n[1099] 850 850 850 850 850 850 850 850 850 850 850 850 850 850 850 850 850 850\n[1117] 850 850 850 851 851 851 851 851 851 851 851 851 851 851 851 851 851 851\n[1135] 851 851 851 851 851 851 851 851 851 851 851 852 852 852 852 852 852 852\n[1153] 852 852 852 852 852 852 853 853 853 853 853 853 853 853 853 853 853 853\n[1171] 853 853 853 853 853 853 853 853 853 853 853 853 853 853 854 854 854 854\n[1189] 854 854 854 854 854 854 854 854 854 854 854 854 854 854 854 854 854 854\n[1207] 854 854 854 854 855 855 855 855 855 855 855 855 855 855 855 855 855 855\n[1225] 855 855 855 855 855 855 855 855 855 855 855 855 857 857 857 857 857 857\n[1243] 857 857 857 857 857 857 857 857 857 857 857 857 857 857 857 857 857 857\n[1261] 857 857 858 858 858 858 858 858 858 858 858 858 858 858 858 858 858 858\n[1279] 858 858 858 858 858 858 858 858 858 858 859 859 859 859 859 859 859 859\n[1297] 859 859 859 859 859 859 859 859 859 859 859 859 859 859 859 859 859 859\n[1315] 860 860 860 860 860 860 860 860 860 860 860 860 860 860 860 860 860 860\n[1333] 860 860 860 860 860 860 860 860 861 861 861 861 861 861 861 861 861 861\n[1351] 861 861 861 861 861 861 861 861 861 861 861 861 861 861 861 861 862 862\n[1369] 862 862 862 862 862 862 862 862 862 862 862 862 862 862 862 862 862 862\n[1387] 862 862 862 862 862 862 863 863 863 863 863 863 863 863 863 863 863 863\n[1405] 863 863 863 863 863 863 863 863 863 863 863 863 863 863 864 864 864 864\n[1423] 864 864 864 864 864 864 864 864 864 864 864 864 864 864 864 864 864 864\n[1441] 864 864 864 864 865 865 865 865 865 865 865 865 865 865 865 865 865 865\n[1459] 865 865 865 865 865 865 865 865 865 865 865 866 866 866 866 866 866 866\n[1477] 866 866 866 866 866 866 866 866 866 866 866 866 866 866 866 866 866 866\n[1495] 866 867 867 867 867 867 867 867 867 867 867 867 867 867 867 867 867 867\n[1513] 867 867 867 867 867 867 867 867 867 868 868 868 868 868 868 868 868 868\n[1531] 868 868 868 868 868 868 868 868 868 868 868 868 868 868 868 868 868 869\n[1549] 869 869 869 869 869 869 869 869 869 869 869 869 869 869 869 869 869 869\n[1567] 869 869 869 869 869 869 869 870 870 870 870 870 870 870 870 870 870 870\n[1585] 870 870 870 870 870 870 870 870 870 870 870 870 870 870 870 871 871 871\n[1603] 871 871 871 871 871 871 871 871 871 871 871 871 871 871 871 871 871 871\n[1621] 871 871 871 871 871 872 872 872 872 872 872 872 872 872 872 872 872 872\n[1639] 872 872 872 872 872 872 872 872 872 872 872 872 872 873 873 873 873 873\n[1657] 873 873 873 873 873 873 873 873 873 873 873 873 873 873 873 873 873 873\n[1675] 873 873 873 874 874 874 874 874 874 874 874 874 874 874 874 874 874 874\n[1693] 874 874 874 874 874 874 874 874 874 874 874 875 875 875 875 875 875 875\n[1711] 875 875 875 875 875 875 876 876 876 876 876 876 876 876 876 876 876 876\n[1729] 876 876 876 876 876 876 876 876 876 876 876 876 876 876 877 877 877 877\n[1747] 877 877 877 877 877 877 877 877 877 877 877 877 877 877 877 877 877 877\n[1765] 877 877 877 877 878 878 878 878 878 878 878 878 878 878 878 878 878 878\n[1783] 878 878 878 878 878 878 878 878 878 878 878 878 879 879 879 879 879 879\n[1801] 879 879 879 879 879 879 879 879 879 879 879 879 879 879 879 879 879 879\n[1819] 879 879 880 880 880 880 880 880 880 880 880 880 880 880 880 880 880 880\n[1837] 880 880 880 880 880 880 880 880 880 880 881 881 881 881 881 881 881 881\n[1855] 881 881 881 881 881 881 881 881 881 881 881 881 881 881 881 881 881 881\n[1873] 882 882 882 882 882 882 882 882 882 882 882 882 882 882 882 882 882 882\n[1891] 882 882 882 882 882 882 882 882 883 883 883 883 883 883 883 883 883 883\n[1909] 883 883 883 884 884 884 884 884 884 884 884 884 884 884 884 884 885 885\n[1927] 885 885 885 885 885 885 885 885 885 885 885 886 886 886 886 886 886 886\n[1945] 886 886 886 886 886 886 886 886 886 886 886 886 886 886 886 886 886 886\n[1963] 886 887 887 887 887 887 887 887 887 887 887 887 887 887 887 887 887 887\n[1981] 887 887 887 887 887 887 887 887 887 888 888 888 888 888 888 888 888 888\n[1999] 888 888 888 888 888 888 888 888 888 888 888 888 888 888 888 888 888 889\n[2017] 889 889 889 889 889 889 889 889 889 889 889 889 889 889 889 889 889 889\n[2035] 889 889 889 889 889 889 889 890 890 890 890 890 890 890 890 890 890 890\n[2053] 890 890 890 890 890 890 890 890 890 890 890 890 890 890 890 891 891 891\n[2071] 891 891 891 891 891 891 891 891 891 891 891 891 891 891 891 891 891 891\n[2089] 891 891 891 891 891 892 892 892 892 892 892 892 892 892 892 892 892 892\n[2107] 892 892 892 892 892 892 892 892 892 892 892 892 892 893 893 893 893 893\n[2125] 893 893 893 893 893 893 893 893 893 893 893 893 893 893 893 893 893 893\n[2143] 893 893 893 894 894 894 894 894 894 894 894 894 894 894 894 894 894 894\n[2161] 894 894 894 894 894 894 894 894 894 894 894 895 895 895 895 895 895 895\n[2179] 895 895 895 895 895 895 896 896 896 896 896 896 896 896 896 896 896 896\n[2197] 896 896 896 896 896 896 896 896 896 896 896 896 896 896 897 897 897 897\n[2215] 897 897 897 897 897 897 897 897 897 897 897 897 897 897 897 897 897 897\n[2233] 897 897 897 897 898 898 898 898 898 898 898 898 898 898 898 898 898 898\n[2251] 898 898 898 898 898 898 898 898 898 898 898 898 899 899 899 899 899 899\n[2269] 899 899 899 899 899 899 899 899 899 899 899 899 899 899 899 899 899 899\n[2287] 899 899 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900 900\n[2305] 900 900 900 900 900 900 900 900 900 900 901 901 901 901 901 901 901 901\n[2323] 901 901 901 901 901 901 901 901 901 901 901 901 901 901 901 901 901 901\n[2341] 902 902 902 902 902 902 902 902 902 902 902 902 902 902 902 902 902 902\n[2359] 902 902 902 902 902 902 902 902 903 903 903 903 903 903 903 903 903 903\n[2377] 903 903 903 903 903 903 903 903 903 903 903 903 903 903 903 903 905 905\n[2395] 905 905 905 905 905 905 905 905 905 905 905 905 905 905 905 905 905 905\n[2413] 905 905 905 905 905 905 906 906 906 906 906 906 906 906 906 906 906 906\n[2431] 906 906 906 906 906 906 906 906 906 906 906 906 906 906 907 907 907 907\n[2449] 907 907 907 907 907 907 907 907 907 907 907 907 907 907 907 907 907 907\n[2467] 907 907 907 907 908 908 908 908 908 908 908 908 908 908 908 908 908 908\n[2485] 908 908 908 908 908 908 908 908 908 908 908 908 909 909 909 909 909 909\n[2503] 909 909 909 909 909 909 909 909 909 909 909 909 909 909 909 909 909 909\n[2521] 909 909 910 910 910 910 910 910 910 910 910 910 910 910 910 910 910 910\n[2539] 910 910 910 910 910 910 910 910 910 910 911 911 911 911 911 911 911 911\n[2557] 911 911 911 911 911 911 911 911 911 911 911 911 911 911 911 911 911 911\n[2575] 912 912 912 912 912 912 912 912 912 912 912 912 912 912 912 912 912 912\n[2593] 912 912 912 912 912 912 912 912 913 913 913 913 913 913 913 913 913 913\n[2611] 913 913 913 913 913 913 913 913 913 913 913 913 913 913 913 913 914 914\n[2629] 914 914 914 914 914 914 914 914 914 914 914 914 914 914 914 914 914 914\n[2647] 914 914 914 914 914 914 915 915 915 915 915 915 915 915 915 915 915 915\n[2665] 915 915 915 915 915 915 915 915 915 915 915 915 915 915\n```\n:::\n:::\n\n\n## Data Exploration\n\n*Initial data visualization*\n\nFirst of all, it is important to visualize the main variable of interest. In this case, Mavoglurant is the main variable interest (variable response). Spaghetti plot is created to show the individual level of Mavoglurant over the time based on Dose (25, 37.5, and 50).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spaghetti plot\nspaghetti_pot <- ggplot(data, aes(x = TIME, y = DV, group = ID, color = as.factor(ID))) +\n  geom_line(alpha = 0.6) +  # Adds individual lines with transparency\n  facet_wrap(~DOSE)+ # to facet by dose\n  theme_minimal() +  # Uses a clean theme\n  labs(title = \"Individual level of Mavoglurant over Time by Dose\",\n       x = \"Time\",\n       y = \"DV\",\n       color = \"Subject ID\") +\n  theme(legend.position = \"none\")  # Hides legend if too many IDs\nprint(spaghetti_pot)\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n***Occasion Rate***\n\nA bar chart for Occasion Rate (OCC) is created to look at the distribution of OCC. OCC is one of the interest in this exercise.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_occ <- ggplot(data, aes(x = factor(OCC))) +\n  geom_bar(aes(fill = factor(OCC)), show.legend = FALSE, width = 0.7) +  # Color bars dynamically\n  scale_fill_brewer(palette = \"Dark2\") +  # Use a more vibrant color palette\n  labs(title = \"Distribution of Occasion Rate (OCC)\",\n       x = \"Occasion Rate (OCC)\",\n       y = \"Count\") +\n  theme_minimal(base_size = 14) +  # Increase text size for readability\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),  # Rotate X labels for clarity\n    panel.grid.major = element_blank(),  # Remove major grid lines for a cleaner look\n    panel.grid.minor = element_blank()\n  )\nprint(plot_occ)\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Data Cleaning\n\nFirst step in the data cleaning, we want to select only OCC= 1, and calculate summary of Mavoglurant\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#OCC =1 \ndata1 <- data %>%\n  filter(OCC==1) #select rows with OCC=1 only \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSummary_DV <- data1 %>%\n  filter(TIME != 0) %>%  # Remove rows where TIME is 0\n  group_by(ID) %>%\n  summarize(Y = sum(DV, na.rm = TRUE))  # Corrected sum function\nprint(Summary_DV)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 2\n      ID     Y\n   <dbl> <dbl>\n 1   793 2691.\n 2   794 2639.\n 3   795 2150.\n 4   796 1789.\n 5   797 3126.\n 6   798 2337.\n 7   799 3007.\n 8   800 2796.\n 9   801 3866.\n10   802 1762.\n# ℹ 110 more rows\n```\n:::\n:::\n\n\nOnly including data with time= 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntime_zero <- data1 %>%\n  filter(TIME == 0)\nprint(time_zero)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 17\n      ID   CMT  EVID  EVI2   MDV    DV  LNDV   AMT  TIME  DOSE   OCC  RATE   AGE\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1   793     1     1     1     1     0     0    25     0    25     1    75    42\n 2   794     1     1     1     1     0     0    25     0    25     1   150    24\n 3   795     1     1     1     1     0     0    25     0    25     1   150    31\n 4   796     1     1     1     1     0     0    25     0    25     1   150    46\n 5   797     1     1     1     1     0     0    25     0    25     1   150    41\n 6   798     1     1     1     1     0     0    25     0    25     1   150    27\n 7   799     1     1     1     1     0     0    25     0    25     1   150    23\n 8   800     1     1     1     1     0     0    25     0    25     1   150    20\n 9   801     1     1     1     1     0     0    25     0    25     1   150    23\n10   802     1     1     1     1     0     0    25     0    25     1   150    28\n# ℹ 110 more rows\n# ℹ 4 more variables: SEX <dbl>, RACE <dbl>, WT <dbl>, HT <dbl>\n```\n:::\n:::\n\n\nCombine two data frames (Summary_DV and time_zero)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_combined <- left_join(time_zero, Summary_DV, by = join_by(ID))\nprint(data_combined)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 18\n      ID   CMT  EVID  EVI2   MDV    DV  LNDV   AMT  TIME  DOSE   OCC  RATE   AGE\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1   793     1     1     1     1     0     0    25     0    25     1    75    42\n 2   794     1     1     1     1     0     0    25     0    25     1   150    24\n 3   795     1     1     1     1     0     0    25     0    25     1   150    31\n 4   796     1     1     1     1     0     0    25     0    25     1   150    46\n 5   797     1     1     1     1     0     0    25     0    25     1   150    41\n 6   798     1     1     1     1     0     0    25     0    25     1   150    27\n 7   799     1     1     1     1     0     0    25     0    25     1   150    23\n 8   800     1     1     1     1     0     0    25     0    25     1   150    20\n 9   801     1     1     1     1     0     0    25     0    25     1   150    23\n10   802     1     1     1     1     0     0    25     0    25     1   150    28\n# ℹ 110 more rows\n# ℹ 5 more variables: SEX <dbl>, RACE <dbl>, WT <dbl>, HT <dbl>, Y <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data_combined %>%\n  select(Y, DOSE, AGE, SEX, RACE, WT, HT) %>% #Selecting variables of Interest\n  mutate(RACE = as_factor(RACE), SEX = as_factor(SEX)) #To convert race and sex to factor variables\n\nstr(df)# check the variable classes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [120 × 7] (S3: tbl_df/tbl/data.frame)\n $ Y   : num [1:120] 2691 2639 2150 1789 3126 ...\n $ DOSE: num [1:120] 25 25 25 25 25 25 25 25 25 25 ...\n $ AGE : num [1:120] 42 24 31 46 41 27 23 20 23 28 ...\n $ SEX : Factor w/ 2 levels \"1\",\"2\": 1 1 1 2 2 1 1 1 1 1 ...\n $ RACE: Factor w/ 4 levels \"1\",\"2\",\"7\",\"88\": 2 2 1 1 2 2 1 4 2 1 ...\n $ WT  : num [1:120] 94.3 80.4 71.8 77.4 64.3 ...\n $ HT  : num [1:120] 1.77 1.76 1.81 1.65 1.56 ...\n```\n:::\n\n```{.r .cell-code}\nsaveRDS(df, file = here(\"machine-learning\", \"data\", \"df.Rds\"))\n```\n:::\n\n\n## Exploratory Data Analysis\n\nIn this section, the data is visualized using appropriate table, charts or graphics based on the data type. it is better to provide a big picture of the data by providing summary table (Characteristic Table). The table will help understand the data better.\n\n*Create summary table*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl_summary(df)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"rwzobpdebf\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#rwzobpdebf table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#rwzobpdebf thead, #rwzobpdebf tbody, #rwzobpdebf tfoot, #rwzobpdebf tr, #rwzobpdebf td, #rwzobpdebf th {\n  border-style: none;\n}\n\n#rwzobpdebf p {\n  margin: 0;\n  padding: 0;\n}\n\n#rwzobpdebf .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#rwzobpdebf .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#rwzobpdebf .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#rwzobpdebf .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#rwzobpdebf .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#rwzobpdebf .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#rwzobpdebf .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#rwzobpdebf .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#rwzobpdebf .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#rwzobpdebf .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#rwzobpdebf .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#rwzobpdebf .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#rwzobpdebf .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#rwzobpdebf .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#rwzobpdebf .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rwzobpdebf .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#rwzobpdebf .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#rwzobpdebf .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#rwzobpdebf .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rwzobpdebf .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#rwzobpdebf .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rwzobpdebf .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#rwzobpdebf .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rwzobpdebf .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rwzobpdebf .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rwzobpdebf .gt_left {\n  text-align: left;\n}\n\n#rwzobpdebf .gt_center {\n  text-align: center;\n}\n\n#rwzobpdebf .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#rwzobpdebf .gt_font_normal {\n  font-weight: normal;\n}\n\n#rwzobpdebf .gt_font_bold {\n  font-weight: bold;\n}\n\n#rwzobpdebf .gt_font_italic {\n  font-style: italic;\n}\n\n#rwzobpdebf .gt_super {\n  font-size: 65%;\n}\n\n#rwzobpdebf .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#rwzobpdebf .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#rwzobpdebf .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#rwzobpdebf .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#rwzobpdebf .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#rwzobpdebf .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#rwzobpdebf .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#rwzobpdebf .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#rwzobpdebf div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"label\"><span data-qmd-base64=\"PHN0cm9uZz5DaGFyYWN0ZXJpc3RpYzwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>Characteristic</strong></span></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"stat_0\"><span data-qmd-base64=\"PHN0cm9uZz5OID0gMTIwPC9zdHJvbmc+\"><span class='gt_from_md'><strong>N = 120</strong></span></span><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Y</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,349 (1,689, 3,054)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">DOSE</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    25</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">59 (49%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    37.5</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">12 (10%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">49 (41%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">AGE</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">31 (26, 41)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">SEX</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    1</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">104 (87%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    2</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">16 (13%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">RACE</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    1</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">74 (62%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    2</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">36 (30%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    7</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2 (1.7%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    88</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">8 (6.7%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">WT</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">82 (73, 90)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">HT</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1.77 (1.70, 1.82)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> <span data-qmd-base64=\"TWVkaWFuIChRMSwgUTMpOyBuICglKQ==\"><span class='gt_from_md'>Median (Q1, Q3); n (%)</span></span></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\nBased on the table above, 120 participants received a single 25 mg, 37.5 mg or 50 mg of MVG (49%, 10%, and 41% respectively). Most subjects were young (mean age of 33 years), race group one (62 %), male (87 %) with a mean BW of 83 kg and mean of HT of 1.76 m.\n\n*Summary Table for all variables based on sex*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary table for all variables by SEX\ndf %>%\n  tbl_summary(by=SEX, type=list(where(is.numeric) ~ \"continuous\"), # Specifies that all numeric variables should be treated as\n              statistic=list(all_continuous() ~ \"{median} ({p25}, {p75})\"), #Numeric (continuous) variables will be summarized using the median and interquartile range (IQR: 25th and 75th percentiles).\n              digits=list(all_continuous() ~ 0, HT ~ 2), # Specifies that all continuous variables should be rounded to 0 decimal places, except for HT (Height), which is rounded to 2 decimal places.\n\n              label=list(Y ~ \"Response\",\n                         DOSE ~ \"Drug dose\",\n                         AGE ~ \"Age\",\n                         RACE ~ \"Race\",\n                         WT ~ \"Weight\",\n                         HT ~ \"Height\")) %>%\n  add_p(test=list(all_continuous() ~ \"wilcox.test\",\n                  all_categorical() ~ \"fisher.test\"), # test differences between groups (SEX in this case).\n        pvalue_fun=function(x) style_number(x, digits=3)) %>%\n  modify_header(p.value=\"*p*-value\") %>%\n  modify_spanning_header(all_stat_cols() ~ \"**Sex**\") %>%\n  as_gt()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following errors were returned during `as_gt()`:\n✖ For variable `AGE` (`SEX`) and \"p.value\" statistic: The package \"cardx\" (>=\n  0.2.3) is required.\n✖ For variable `DOSE` (`SEX`) and \"p.value\" statistic: The package \"cardx\" (>=\n  0.2.3) is required.\n✖ For variable `HT` (`SEX`) and \"p.value\" statistic: The package \"cardx\" (>=\n  0.2.3) is required.\n✖ For variable `RACE` (`SEX`) and \"p.value\" statistic: The package \"cardx\" (>=\n  0.2.3) is required.\n✖ For variable `WT` (`SEX`) and \"p.value\" statistic: The package \"cardx\" (>=\n  0.2.3) is required.\n✖ For variable `Y` (`SEX`) and \"p.value\" statistic: The package \"cardx\" (>=\n  0.2.3) is required.\n```\n:::\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"mrlmzxtnub\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#mrlmzxtnub table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#mrlmzxtnub thead, #mrlmzxtnub tbody, #mrlmzxtnub tfoot, #mrlmzxtnub tr, #mrlmzxtnub td, #mrlmzxtnub th {\n  border-style: none;\n}\n\n#mrlmzxtnub p {\n  margin: 0;\n  padding: 0;\n}\n\n#mrlmzxtnub .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#mrlmzxtnub .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#mrlmzxtnub .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#mrlmzxtnub .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#mrlmzxtnub .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#mrlmzxtnub .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#mrlmzxtnub .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#mrlmzxtnub .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#mrlmzxtnub .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#mrlmzxtnub .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#mrlmzxtnub .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#mrlmzxtnub .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#mrlmzxtnub .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#mrlmzxtnub .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#mrlmzxtnub .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mrlmzxtnub .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#mrlmzxtnub .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#mrlmzxtnub .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#mrlmzxtnub .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mrlmzxtnub .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#mrlmzxtnub .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mrlmzxtnub .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#mrlmzxtnub .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mrlmzxtnub .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mrlmzxtnub .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mrlmzxtnub .gt_left {\n  text-align: left;\n}\n\n#mrlmzxtnub .gt_center {\n  text-align: center;\n}\n\n#mrlmzxtnub .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#mrlmzxtnub .gt_font_normal {\n  font-weight: normal;\n}\n\n#mrlmzxtnub .gt_font_bold {\n  font-weight: bold;\n}\n\n#mrlmzxtnub .gt_font_italic {\n  font-style: italic;\n}\n\n#mrlmzxtnub .gt_super {\n  font-size: 65%;\n}\n\n#mrlmzxtnub .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#mrlmzxtnub .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#mrlmzxtnub .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#mrlmzxtnub .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#mrlmzxtnub .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#mrlmzxtnub .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#mrlmzxtnub .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#mrlmzxtnub .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#mrlmzxtnub div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"label\"><span data-qmd-base64=\"PHN0cm9uZz5DaGFyYWN0ZXJpc3RpYzwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>Characteristic</strong></span></span></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"level 1; stat_1\">\n        <div class=\"gt_column_spanner\"><span data-qmd-base64=\"PHN0cm9uZz5TZXg8L3N0cm9uZz4=\"><span class='gt_from_md'><strong>Sex</strong></span></span></div>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"p.value\"><span data-qmd-base64=\"PGVtPnA8L2VtPi12YWx1ZQ==\"><span class='gt_from_md'><em>p</em>-value</span></span></th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"stat_1\"><span data-qmd-base64=\"PHN0cm9uZz4xPC9zdHJvbmc+PGJyIC8+Ck4gPSAxMDQ=\"><span class='gt_from_md'><strong>1</strong><br />\nN = 104</span></span><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"stat_2\"><span data-qmd-base64=\"PHN0cm9uZz4yPC9zdHJvbmc+PGJyIC8+Ck4gPSAxNg==\"><span class='gt_from_md'><strong>2</strong><br />\nN = 16</span></span><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Response</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">2,398 (1,722, 3,083)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">2,060 (1,478, 2,728)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Drug dose</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">38 (25, 50)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">25 (25, 44)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Age</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">30 (25, 39)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">42 (38, 46)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Race</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    1</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">63 (61%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">11 (69%)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    2</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">33 (32%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">3 (19%)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    7</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1 (1.0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1 (6.3%)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    88</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">7 (6.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1 (6.3%)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Weight</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">83 (75, 92)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">70 (63, 82)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Height</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1.78 (1.73, 1.82)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1.63 (1.58, 1.67)</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> <span data-qmd-base64=\"TWVkaWFuIChRMSwgUTMpOyBuICglKQ==\"><span class='gt_from_md'>Median (Q1, Q3); n (%)</span></span></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\nFor better understanding about the data, data are visualized in Histogram and Boxplot\n\n*Histogram of Weight and height distribution*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a histogram for WT (Weight)\nplot1 <- ggplot(df, aes(x = WT)) + \n  geom_histogram(binwidth = 5, fill = \"#EEAEEE\", color = \"black\", alpha = 0.7) +  # Blue fill, black border, transparency\n  labs(title = \"Histogram of Weight (WT)\",\n       x = \"Weight (kg)\",\n       y = \"Count\") +\n  theme_minimal(base_size = 14) +  # Improves readability\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  ) +\n  geom_density(aes(y = ..count.. * 5), color = \"red\", linetype = \"dashed\", size = 1)  # Add smooth density curve\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n```{.r .cell-code}\n# Create a histogram for HT (Height)\nplot2 <- ggplot(df, aes(x = HT)) + \n  geom_histogram(position = \"identity\", fill = \"#EEB4B4\", color = \"black\", alpha = 0.7) +  # Blue fill, black border, transparency\n  labs(title = \"Histogram of Height (HT)\",\n       x = \"Height (cm)\",\n       y = \"Count\") +\n  theme_minimal()\n#Combine the histogram \nplot1 + plot2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nBased on the Histogram of Weight, the weight is slighly skewed to the right. On the other hand, the height is skewed to the left. It is indicating that the data is not normally distributed both Weight and Heigth.\n\n***Boxplot of Y variable based on Categorical Variables***\n\nBoxplots were created to better visualization between response variable based on sex, race and dose.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Boxplot of Y by SEX\nboxplot_sex <- ggplot(df, aes(x = factor(SEX), y = Y, fill = factor(SEX))) +\n  geom_boxplot(alpha = 0.7, color = \"black\") +  # Add transparency and black borders\n  labs(title = \"Boxplot of Y by SEX\",\n       x = \"Sex\",\n       y = \"Y\") +\n  theme_minimal(base_size = 14) +  # Improve readability\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12),\n    legend.position = \"none\",  # Remove legend since SEX is on x-axis\n    panel.border = element_rect(color = \"black\", fill = NA, size = 1)  # Add frame\n  ) +\n  scale_fill_brewer(palette = \"Pastel1\")  # Use a nice color palette\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n:::\n\n```{.r .cell-code}\n# Boxplot of Y by DOSE\nboxplot_dose <- ggplot(df, aes(x = factor(DOSE), y = Y, fill = factor(DOSE))) +\n  geom_boxplot(alpha = 0.7, color = \"black\") +  # Add transparency and black borders\n  labs(title = \"Boxplot of Y by DOSE\",\n       x = \"Dose\",\n       y = \"Y\") +\n  theme_minimal(base_size = 14) +  # Improve readability\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12),\n    legend.position = \"none\",  # Remove legend since DOSE is on x-axis\n    panel.border = element_rect(color = \"black\", fill = NA, size = 1)  # Add frame\n  ) +\n  scale_fill_brewer(palette = \"Set2\")  # Use a distinct color palette\n\n# Boxplot of Y by RACE\nboxplot_race <- ggplot(df, aes(x = factor(RACE), y = Y, fill = factor(RACE))) +\n  geom_boxplot(alpha = 0.7, color = \"black\") +  # Transparent boxes with black borders\n  labs(title = \"Boxplot of Y by RACE\",\n       x = \"Race\",\n       y = \"Y\") +\n  theme_minimal(base_size = 14) +  # Improve readability\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12),\n    legend.position = \"none\",  # Remove legend since RACE is already labeled on x-axis\n    panel.border = element_rect(color = \"black\", fill = NA, size = 1)  # Add frame\n  ) +\n  scale_fill_brewer(palette = \"Set3\")  # Apply a nice color palette\n\n# Combine the boxplots\n(boxplot_sex + boxplot_dose) / boxplot_race\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nBased on the boxplot above, the mean of response (y) is higher in sex1 compared to sex 2. In the dose category, it can be seen that the higher dose, the higher mean of response variable Y. Moreover, Race 1 and 2 have higher mean of Y compared two other races.\n\n*scatter plot of y based on continouse variables*\n\nScatter plot is better way to show the relationship between continouse variable (both response and predictors). Loess method is used to draw the regression line to clearly look at nonlinear relationship between Y and predictors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatterplot of Y by AGE\nplot_age <- ggplot(df, aes(x = AGE, y = Y)) +\n  geom_point(alpha = 0.7, size = 2, fill= \"#EE00EE\", color=\"#EE00EE\", stroke=1, shape=18) +  # Transparent points for better visibility\n  geom_smooth(method = \"loess\", se = TRUE, color = \"black\", linetype = \"dashed\", size = 1) +  # Regression line\n  labs(title = \"Y vs Age\",\n       x = \"Age\",\n       y = \"Y\") + \n theme_bw()+\n  theme(axis.title=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.text=element_text(size=8, color=\"black\"),\n        plot.title=element_text(size=12, color=\"black\", face=\"bold\", hjust= 0.5,))\n\n# Scatterplot of Y by WT (Weight)\nplot_wt <- ggplot(df, aes(x = WT, y = Y)) +\n  geom_point(alpha = 0.7, size = 2, fill= \"#9ACD32\", color=\"#9ACD32\", stroke=1, shape=18) +  # Transparent points for better visibility\n  geom_smooth(method = \"loess\", se = TRUE, color = \"black\", linetype = \"dashed\", size = 1) +  # Regression line\n  labs(title = \"Y vs WT\",\n       x = \"Weight\",\n       y = \"Y\") + \n theme_bw()+\n  theme(axis.title=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.text=element_text(size=8, color=\"black\"),\n        plot.title=element_text(size=12, color=\"black\", face=\"bold\", hjust= 0.5))\n\n# Scatterplot of Y by HT (Height) with correct color scale\nplot_ht<- ggplot(df, aes(x = HT, y = Y)) +\n  geom_point(alpha = 0.7, size = 2, fill= \"#EE4000\", color=\"#EE4000\", stroke=1, shape=18) +  # Transparent points for better visibility\n  geom_smooth(method = \"loess\", se = TRUE, color = \"black\", linetype = \"dashed\", size = 1) +  # Regression line\n  labs(title = \"Y vs HT\",\n       x = \"Height\",\n       y = \"Y\") + \n theme_bw()+\n  theme(axis.title=element_text(size=10, color=\"black\", face=\"bold\"),\n        axis.text=element_text(size=8, color=\"black\"),\n        plot.title=element_text(size=12, color=\"black\", face=\"bold\", hjust= 0.5))\n \n# Combine and output the three scatterplots\nggarrange(plot_age, plot_wt, plot_ht, ncol=3, nrow=1, align=\"h\", \n          heights=c(1, 1, 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nBased on the scatter plots above, it can be seen that there is no linear relationship between Y and the predictors. - For Age, the trend appears somewhat flat with fluctuations, indicating weak or no strong association. The confidence interval (shaded area) is wide, especially at the edges, suggesting greater uncertainty in predictions at extreme ages. There is a large spread of data points, meaning variability in Y is high across different age.\n\n-   For Weight, the confidence interval is relatively narrow in the middle but widens at lower and higher WT values, indicating more uncertainty at extreme weights. There is a cluster of data points around a moderate WT range, with more variability at lower and higher weights.\n\n-   For height, the LOESS curve exhibits a U-shaped or fluctuating trend, suggesting a non-linear relationship between Height and Y. Initially, Y decreases with increasing Height, but at certain points, it fluctuates and slightly increases. The confidence interval is wider at extreme heights, suggesting greater uncertainty in predictions. The spread of data is relatively uniform, but there are some extreme Y values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Scatterplot Y vs Race\nplot_race <- ggplot(df, aes(x = factor(RACE), y = Y, color = factor(RACE))) +\n  geom_jitter(alpha = 0.7, size = 2, width = 0.2) +  # Jitter to avoid overlapping points\n  geom_boxplot(outlier.shape = NA, alpha = 0.3) +  # Boxplot for distribution\n  labs(title = \"Scatterplot of Y by Race\",\n       x = \"Race\",\n       y = \"Outcome Variable (Y)\") +\n  theme_minimal(base_size = 14) +\n  scale_color_brewer(palette = \"Set1\") +\n  theme(\n    panel.border = element_rect(color = \"black\", fill = NA, size = 1)  # Add frame border\n  )\n\n# Scatterplot Y vs SEX\nplot_sex <- ggplot(df, aes(x = factor(SEX), y = Y, color = factor(SEX))) +\n  geom_jitter(alpha = 0.7, size = 2, width = 0.2) +  # Jitter to separate overlapping points\n  geom_boxplot(outlier.shape = NA, alpha = 0.3) +  # Boxplot for visualization\n  labs(title = \"Scatterplot of Y by Sex\",\n       x = \"Sex\",\n       y = \"Outcome Variable (Y)\") +\n  theme_minimal(base_size = 14) +\n  scale_color_brewer(palette = \"Dark2\") +  # Different color scheme\n  theme(\n    panel.border = element_rect(color = \"black\", fill = NA, size = 1)  # Add frame border\n  )\n\n# Scatterplot Y vs Doses\nplot_dose <- ggplot(df, aes(x = factor(DOSE), y = Y, color = factor(DOSE))) +\n  geom_jitter(alpha = 0.7, size = 2, width = 0.2) +  # Jitter for better visualization\n  geom_boxplot(outlier.shape = NA, alpha = 0.3) +  # Boxplot for distribution\n  labs(title = \"Scatterplot of Y by Dose\",\n       x = \"Dose\",\n       y = \"Outcome Variable (Y)\") +\n  theme_minimal(base_size = 14) +\n  scale_color_brewer(palette = \"Set3\") +  # Different color scheme\n  theme(\n    panel.border = element_rect(color = \"black\", fill = NA, size = 1)  # Add frame border\n  )\n\n# Combine and output the three scatterplots\nggarrange(\n  ggarrange(plot_race, plot_sex, ncol = 2, nrow = 1),  # Row 1: Two plots side by side\n  plot_dose,  # Row 2: Full-width plot\n  ncol = 1, nrow = 2,  # 2 rows total\n  heights = c(2, 2)  # Equal height for both rows\n)\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nBased on the scatter plot above, race 1 has a wider spread of Y values with more extreme values (outliers). The spread of Y for Sex 1 is slightly larger than for Sex 2. Sex 2 appears to have slightly higher median Y values. The interquartile range (IQR) suggests that the distribution of Y values differs between sexes.The median Y value increases with increasing dose. The spread of Y also increases as the dose increases. The dose group 50 shows the widest variability, with more extreme values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select only continuous variables (excluding categorical variables like SEX, RACE, DOSE)\ndf_cont <- df %>% select(where(is.numeric))\n\n# Compute correlation matrix\ncor_matrix <- cor(df_cont, use = \"complete.obs\")  # Use only complete cases\n\n# Visualize correlation matrix with correlation values\ncorrplot(cor_matrix, \n         method = \"color\",  # Color-coded visualization\n         type = \"lower\",  # Show only lower triangle to reduce redundancy\n         tl.col = \"black\",  # Black text labels for variable names\n         tl.srt = 45,  # Rotate labels for better readability\n         addCoef.col = \"black\",  # Show correlation values in black\n         number.cex = 0.8)  # Adjust text size for correlation numbers\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nBased on the correlation matrix, DOSE is the strongest predictor of Y, showing a positive correlation (0.72). AGE does not seem to have a meaningful relationship with any variable. Weight (WT) and Height (HT) are moderately correlated (0.60), which makes sense biologically. There are weak negative correlations of Y with WT and HT, but their impact is likely small.\n\n## Model Fitting\n\n*Model 1: Y \\~ Dose* For model fitting, I will start with simple model (y\\~ DOSE). Tidymodels is used in this modeling.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$DOSE <- as.factor(df$DOSE)\n\n# Linear regression: Y ~ DOSE\nm1 <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(Y ~ DOSE, df)\n\n# Output the fitting result\ntidy(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)    1783.      87.9     20.3  3.97e-40\n2 DOSE37.5        681.     214.       3.19 1.84e- 3\n3 DOSE50         1456.     130.      11.2  3.79e-20\n```\n:::\n:::\n\n\nInterpretation:\n\n-   Intercept (Baseline: DOSE 25): the estimated mean Y when using DOSE 25 is 1782.67\n\n-   DOSE 37.5 (681.24): increasing DOSE from 25 to 37.5 leads to an increase in Y by 681.24 on average with p-value = 0.0018 (\\< 0.05) → This effect is statistically significant.\n\n-   DOSE 50 (1456.20): increasing DOSE from 25 to 50 leads to an increase in Y by 1456.20 on average. p-value \\< 0.0001 → Strong evidence that this effect is statistically significant.\n\n*Model2: Y \\~ all predictors*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm2 <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(Y ~ ., df)\n\n# Output the fitting result\ntidy(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   term        estimate std.error statistic  p.value\n   <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n 1 (Intercept)  4891.     1823.       2.68  8.42e- 3\n 2 DOSE37.5      664.      200.       3.31  1.26e- 3\n 3 DOSE50       1499.      122.      12.2   2.92e-22\n 4 AGE             3.52      7.90     0.446 6.57e- 1\n 5 SEX2         -360.      218.      -1.65  1.01e- 1\n 6 RACE2         149.      130.       1.15  2.54e- 1\n 7 RACE7        -421.      451.      -0.933 3.53e- 1\n 8 RACE88        -65.3     247.      -0.264 7.92e- 1\n 9 WT            -23.3       6.44    -3.62  4.54e- 4\n10 HT           -741.     1108.      -0.669 5.05e- 1\n```\n:::\n:::\n\n\nInterpretation: - The intercept (4890.92) represents the expected Y value when all predictors are zero. - Dose 37.5, Dose 50, and Weight are statistically significant with Y. Doses have positive relationship with Y, while Weight had significant effect on Y. Other predictors are not statistically correlated with Y.\n\n*compute RMSE and R-squared*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1_RMSE_R2<- predict(m1, df) %>%\n  bind_cols(df) %>%\n  metrics(truth=Y, estimate=.pred) %>%\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard     666.   \n2 rsq     standard       0.516\n3 mae     standard     517.   \n```\n:::\n\n```{.r .cell-code}\nm2_RMSE_R2<- predict(m2, df) %>%\n  bind_cols(df) %>%\n  metrics(truth=Y, estimate=.pred) %>%\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard     590.   \n2 rsq     standard       0.620\n3 mae     standard     445.   \n```\n:::\n:::\n\n\nBased on the RMSE and R-Squared, model 2 (all predictors) performed better fit to the data compared to Model 1 (Dose Only) with RMSE and R-Squared (666.31 and 0.51 respectively for model 1, and 590.31 and 0.62 for model 2).\n\n*Model 3: Logistic Regression (Sex \\~ Dose)*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#SEX ~ DOSE\nm3 <- logistic_reg() %>%\n  set_engine(\"glm\") %>%\n  set_mode(\"classification\") %>%\n  fit(SEX ~ DOSE, df)\ntidy(m3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  term        estimate std.error statistic    p.value\n  <chr>          <dbl>     <dbl>     <dbl>      <dbl>\n1 (Intercept)  -1.59       0.347   -4.58   0.00000465\n2 DOSE37.5     -0.0202     0.849   -0.0238 0.981     \n3 DOSE50       -0.831      0.627   -1.33   0.185     \n```\n:::\n:::\n\n\nInterpretation:\n\nThe Intercept is significant, meaning there is an underlying distribution of SEX probabilities. Neither DOSE37.5 nor DOSE50 significantly affect SEX because their p-values \\> 0.05. This suggests that DOSE does not strongly predict SEX.\n\n*Model 4: Logistic Regression (Sex \\~ All Predictors)*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#SEX ~ all predictors\nm4 <- logistic_reg() %>%\n  set_engine(\"glm\") %>%\n  set_mode(\"classification\") %>%\n  fit(SEX ~ DOSE + AGE + RACE + WT + HT, df)\n\n# Output the fitting result\ntidy(m4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  55.7      16.8      3.31    0.000937\n2 DOSE37.5     -3.11      1.84    -1.69    0.0916  \n3 DOSE50       -2.47      1.33    -1.86    0.0633  \n4 AGE           0.114     0.0696   1.64    0.101   \n5 RACE2        -2.40      1.39    -1.73    0.0843  \n6 RACE7         0.0168    3.56     0.00473 0.996   \n7 RACE88       -1.74      2.34    -0.743   0.457   \n8 WT           -0.0463    0.0716  -0.646   0.518   \n9 HT          -33.3      10.7     -3.10    0.00191 \n```\n:::\n:::\n\n\nBased on the output, only Height is significantly correlated with Sex. Dose levels have a small, negative, but non-significant effect on Sex. Age, race and WT are not significant with Sex.\n\n*Calculate RMSE and R-squared*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm3_RMSE_R2 <- predict(m3, df, type=\"class\") %>%\n  bind_cols(predict(m3, df, type=\"prob\")) %>%\n  bind_cols(df) %>%\n  metrics(truth=SEX, estimate=.pred_class, .pred_1) %>%\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 accuracy    binary         0.867\n2 kap         binary         0    \n3 mn_log_loss binary         0.384\n4 roc_auc     binary         0.592\n```\n:::\n\n```{.r .cell-code}\nm4_RMSE_R2 <- predict(m4, df, type=\"class\") %>%\n  bind_cols(predict(m4, df, type=\"prob\")) %>%\n  bind_cols(df) %>%\n  metrics(truth=SEX, estimate=.pred_class, .pred_1) %>%\n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 accuracy    binary         0.95 \n2 kap         binary         0.772\n3 mn_log_loss binary         0.133\n4 roc_auc     binary         0.978\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data frame for both models\nmetrics_df <- data.frame(\n  metric = rep(c(\"accuracy\", \"kap\", \"mn_log_loss\", \"roc_auc\"), 2),  # Repeating metrics\n  estimate = c(0.8667, 0.0000, 0.3843, 0.5919,   # First model\n               0.9500, 0.7716, 0.1334, 0.9784),  # Second model\n  model = rep(c(\"Model 1\", \"Model 2\"), each = 4)  # Model labels\n)\n\n# Create a grouped bar plot\nggplot(metrics_df, aes(x = metric, y = estimate, fill = model)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", color = \"black\", alpha = 0.8) +  # Grouped bars\n  labs(title = \"Comparison of Model Performance Metrics\",\n       x = \"Metric\",\n       y = \"Score\",\n       fill = \"Model\") +\n  theme_minimal(base_size = 14) +  # Clean theme\n  scale_fill_manual(values = c(\"Model 1\" = \"lightpink\", \"Model 2\" = \"lightblue\")) +  # Custom colors\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nInterpretation: - Model 2 (accuracy 0.95) is more accurate in making correct predictions than Model 1 (accuracy 0.87). - Kappa measures how well the model's predictions agree with the true labels, adjusting for chance. Model 2 shows a much stronger agreement with the actual data, while Model 1 shows almost no agreement beyond chance. - Lower log loss indicates better probabilistic predictions. Model 2 has a significantly lower log loss, meaning its probability estimates are more reliable. - A higher ROC AUC means the model is better at distinguishing between classes. Model 2 is much better than Model 1 at identifying positive vs. negative classes.\n\n# Module 10 Part 1\n\nIn this exercise, we will use the data from previous part.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm10_df <- df %>% \n  select(-RACE) %>%\n  mutate(DOSE = as.factor(DOSE)) # convert DOSE into factor\n\ncolnames(m10_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Y\"    \"DOSE\" \"AGE\"  \"SEX\"  \"WT\"   \"HT\"  \n```\n:::\n\n```{.r .cell-code}\nsummary(m10_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Y            DOSE         AGE        SEX           WT        \n Min.   : 826.4   25  :59   Min.   :18.00   1:104   Min.   : 56.60  \n 1st Qu.:1700.5   37.5:12   1st Qu.:26.00   2: 16   1st Qu.: 73.17  \n Median :2349.1   50  :49   Median :31.00           Median : 82.10  \n Mean   :2445.4             Mean   :33.00           Mean   : 82.55  \n 3rd Qu.:3050.2             3rd Qu.:40.25           3rd Qu.: 90.10  \n Max.   :5606.6             Max.   :50.00           Max.   :115.30  \n       HT       \n Min.   :1.520  \n 1st Qu.:1.700  \n Median :1.770  \n Mean   :1.759  \n 3rd Qu.:1.813  \n Max.   :1.930  \n```\n:::\n:::\n\n\nFirst, I am setting a seed rngseed using a 7%% for train set and a 25% for test set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set seed\nrngseed <- 1234\nset.seed(rngseed)\n\n# Split dataset into a 75% train set and a 25% test set\nsplitted_m10 <- initial_split(m10_df, prop=.75)\ntrain_data <- training(splitted_m10)\ntest_data  <- testing(splitted_m10)\n```\n:::\n\n\n## Model Fitting\n\nIn this part, I will fit two models with y as an outcome. Model one has one predictor (dose), and another model include all predictors. Plus Null Model, which can be used to compare the RMSE.\n\n*The First Model*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#  Y ~ DOSE \nm1_10 <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(Y ~ DOSE, train_data)\n\n\n#Output \ntidy(m1_10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)    1873.      109.     17.2  1.07e-29\n2 DOSE37.5        651.      275.      2.36 2.03e- 2\n3 DOSE50         1336.      158.      8.45 5.97e-13\n```\n:::\n:::\n\n\n*The second model*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Y ~ DOSE + AGE + SEX + WT + HT\n\nm2_10 <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(Y ~ DOSE + AGE + SEX + WT + HT , train_data)\n\n# output \ntidy(m2_10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 5\n  term         estimate std.error statistic  p.value\n  <chr>           <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)  5764.      2178.      2.65   9.72e- 3\n2 DOSE37.5      640.       255.      2.51   1.39e- 2\n3 DOSE50       1384.       147.      9.44   8.65e-15\n4 AGE            -0.119      9.66   -0.0123 9.90e- 1\n5 SEX2         -571.       287.     -1.99   5.00e- 2\n6 WT            -22.8        7.72   -2.95   4.13e- 3\n7 HT          -1117.      1368.     -0.817  4.17e- 1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#  Null Model \nm3_10 <- null_model() %>%\n  set_engine(\"parsnip\") %>%\n  set_mode(\"regression\") %>%\n  fit(Y ~ ., train_data)\n\n\n#Output \ntidy(m3_10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  value\n  <dbl>\n1 2509.\n```\n:::\n:::\n\n\n## Model Performance Assessment 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Compute prediction on train data\ndose_preds_train <-  predict(m1_10, train_data) %>% bind_cols(train_data)\nall_preds_train <-  predict(m2_10, train_data) %>% bind_cols(train_data)\nnull_preds_train <- predict(m3_10, train_data) %>% bind_cols(train_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print RMSE for  Y~DOSE \nRMSE_train_DOSE <- rmse(dose_preds_train, truth = Y, estimate = .pred)\n\n# Print RMSE for Y~ All Predictors \nRMSE_train_All <- rmse(all_preds_train, truth = Y, estimate = .pred)\n\n# Print RMSE for the NUll model \nRMSE_train_Null <- rmse(null_preds_train, truth = Y, estimate = .pred)\n```\n:::\n\n\nBased on the output from three different models, RMSEs for model with DOSE only, all predictors, and null are 702.8, 627.3, 948.36 respectively. We can conclude that Regression model including all predictors is the best model for the dataset with the lowest RMSE.\n\n## Model Performance Assessment 2\n\nIn this part, cross validation is performed by using a 10 fold cross-validation (CV) to examine the performance of the models.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#set seed\nset.seed(rngseed)\n\n#Getting the CV folds established\nfolds <- vfold_cv(train_data, v = 10)\n```\n:::\n\n\nNow I am going to fit the model with only DOSE as predictor to 9 of the splits for 10 times, and calculate the RMSE\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Y~DOSE \n# Model setting\nm1_10_spec <- linear_reg() %>% \n  set_engine(\"lm\") %>% \n  set_mode(\"regression\")\n\n# Set the workflow: model 1\nm1_10_cv <- workflow() %>%\n  add_model(m1_10_spec) %>%\n  add_formula(Y ~ DOSE)\n\n# Set seed\nset.seed(rngseed)\n\n# Fit the data\nm1_10_cv_fit <- m1_10_cv  %>% \n  fit_resamples(folds)\n\n# Mean and SE of RMSE\ncollect_metrics(m1_10_cv_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  .metric .estimator    mean     n std_err .config             \n  <chr>   <chr>        <dbl> <int>   <dbl> <chr>               \n1 rmse    standard   697.       10 68.1    Preprocessor1_Model1\n2 rsq     standard     0.500    10  0.0605 Preprocessor1_Model1\n```\n:::\n:::\n\n\nFitting model with all predictors\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Y~ All Predictors \n# Model setting\nm2_10_spec <- linear_reg() %>% \n  set_engine(\"lm\") %>% \n  set_mode(\"regression\")\n\n# Set the workflow: model 1\nm2_10_cv <- workflow() %>%\n  add_model(m1_10_spec) %>%\n  add_formula(Y ~ DOSE + AGE + SEX + WT + HT )\n\n# Set seed\nset.seed(rngseed)\n\n# Fit the data\nm2_10_cv_fit <- m2_10_cv  %>% \n  fit_resamples(folds)\n\n# Mean and SE of RMSE\ncollect_metrics(m2_10_cv_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  .metric .estimator    mean     n std_err .config             \n  <chr>   <chr>        <dbl> <int>   <dbl> <chr>               \n1 rmse    standard   653.       10 63.6    Preprocessor1_Model1\n2 rsq     standard     0.561    10  0.0717 Preprocessor1_Model1\n```\n:::\n:::\n\n\nBased on the output, Model 2 has a lower RMSE (652.77 vs. 696.71), indicating that it predicts the response variable Y more accurately than Model 1. The standard error (std_err) is slightly lower in Model 2 (63.60 vs. 68.10), which suggests that Model 2 is more stable across different CV folds.For the R², Model 2 has a higher R² (0.5608 vs. 0.5000), meaning it explains 56.08% of the variance in Y, compared to Model 1, which explains only 50.00%. The standard error of R² is slightly higher in Model 2, meaning there is more variation in R² across folds, but the difference is minor.\n\n*Validate using different set.deed*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# New Set seed\nset.seed(3456)\n\n#10-fold sapling \nfolds_new_cv <- vfold_cv(train_data, v=10)\n\n\n#Y~DOSE \n\nset.seed(3456)\n# Model setting\nm1_10_spec <- linear_reg() %>% \n  set_engine(\"lm\") %>% \n  set_mode(\"regression\")\n\n\n# Set seed\nset.seed(3456)\n\n# Fit the data\nm1_10_cv_fit_new <- m1_10_cv  %>% \n  fit_resamples(folds_new_cv )\n\n\n# Mean and SE of RMSE\ncollect_metrics(m1_10_cv_fit_new)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  .metric .estimator    mean     n std_err .config             \n  <chr>   <chr>        <dbl> <int>   <dbl> <chr>               \n1 rmse    standard   691.       10 72.7    Preprocessor1_Model1\n2 rsq     standard     0.562    10  0.0638 Preprocessor1_Model1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Y~ All Predictors \n# Set seed\n\n\n# Fit the data\nm2_10_cv_fit_new <- m2_10_cv  %>% \n  fit_resamples(folds_new_cv)\n\n# Mean and SE of RMSE\ncollect_metrics(m2_10_cv_fit_new)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 6\n  .metric .estimator    mean     n std_err .config             \n  <chr>   <chr>        <dbl> <int>   <dbl> <chr>               \n1 rmse    standard   643.       10 66.7    Preprocessor1_Model1\n2 rsq     standard     0.588    10  0.0510 Preprocessor1_Model1\n```\n:::\n:::\n\n\nModel 2 performs better than Model 1, as it has a lower RMSE (643.02 vs. 690.78). This suggests that Model 2 has improved predictive accuracy and makes smaller errors in predicting Y. fFr R², Model 2 has a higher R² (0.5876 vs. 0.5624), meaning it explains more variance in Y. A higher R² suggests Model 2 fits the data better than Model 1. The result is consistent with original model.\n\n# Module 10 Part 2 : This section was added by Yufei Wu\n\n## Model predictions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate predictions and combine with observed values\npredictions_dose <- predict(m1_10, train_data) %>%\n  mutate(Model = \"Y ~ DOSE\") %>%\n  bind_cols(train_data %>% select(Y))\n\npredictions_all <- predict(m2_10, train_data) %>%\n  mutate(Model = \"Y ~ All Predictors\") %>%\n  bind_cols(train_data %>% select(Y))\n\npredictions_null <- predict(m3_10, train_data) %>%\n  mutate(Model = \"Null Model\") %>%\n  bind_cols(train_data %>% select(Y))\n\n# Combine all predictions into one dataframe\npredictions_df <- bind_rows(predictions_dose, predictions_all, predictions_null) %>%\n  rename(Observed = Y, Predicted = .pred)\n\n# Create the scatter plot\nggplot(predictions_df, aes(x = Observed, y = Predicted, color = Model, shape = Model)) +\n  geom_point(alpha = 0.7) + \n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\") + # 45-degree line\n  scale_x_continuous(limits = c(0, 5000)) + \n  scale_y_continuous(limits = c(0, 5000)) +\n  labs(title = \"Observed vs Predicted Values\",\n       x = \"Observed Values\",\n       y = \"Predicted Values\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\nFrom the plot, we can see that the data from the null model are a straight horizontal line (red line) since we predict the same mean for each observation. For model 1, which only includes dose, the data falls along three horizontal lines (blue lines). This may be because the DOSE variable only takes three values (25 mg, 37.5 mg, or 50 mg). Thus, we only get three different predicted values for the outcome. The model 2 looks the best since the points fall along the 45 degree line. However, there seems to be some pattern to the scatter with model predictions lower than observed values for high values.\n\nNow plot predicted versus residuals:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute residuals for Model 2\nresiduals_df <- predict(m2_10, train_data) %>%\n  bind_cols(train_data %>% select(Y)) %>%\n  mutate(Residuals = .pred - Y, Predicted = .pred)\n\n# Find the max absolute residual for symmetric y-axis limits\nresidual_limit <- max(abs(residuals_df$Residuals))\n\n# Load ggplot2 for visualization\nlibrary(ggplot2)\n\n# Create residuals plot\nggplot(residuals_df, aes(x = Predicted, y = Residuals)) +\n  geom_point(alpha = 0.7, color = \"blue\") +  # Scatter plot of residuals\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") + # Reference line at 0\n  scale_y_continuous(limits = c(-residual_limit, residual_limit)) + # Symmetric y-axis\n  labs(title = \"Predicted vs Residuals (Model 2)\",\n       x = \"Predicted Values\",\n       y = \"Residuals\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\nThere is a residual pattern that there are more and higher negative values than positive values.\n\n## Model predictions and uncertainty\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#set seed\nset.seed(rngseed)\n\n# Create 100 bootstrap samples\ndat_bs <- bootstraps(train_data, times = 100)\n\n# Fit the model to each bootstrap sample and store predictions\npred_bs <- matrix(NA, nrow = nrow(train_data), ncol = 100)\n\nfor (i in 1:100) {\n  # Extract bootstrap sample\n  dat_sample <- analysis(dat_bs$splits[[i]])\n  \n  # Fit model to bootstrap sample\n  m2_bs <- linear_reg() %>%\n    set_engine(\"lm\") %>%\n    fit(Y ~ DOSE + AGE + SEX + WT + HT, data = dat_sample)\n  \n  # Make predictions for original training data\n  pred_bs[, i] <- predict(m2_bs, train_data)$.pred\n}\n\n# Compute mean and confidence intervals for predictions\npreds <- apply(pred_bs, 1, quantile, probs = c(0.055, 0.5, 0.945)) |> t()\ncolnames(preds) <- c(\"Lower\", \"Median\", \"Upper\")\n\n# Compute point estimate from the original model\npoint_estimate <- predict(m2_10, train_data)$.pred\n\n# Create dataframe with observed values, point estimates, and bootstrap statistics\nplot_data <- train_data %>%\n  mutate(Point_Estimate = point_estimate,\n         Median = preds[, \"Median\"],\n         Lower = preds[, \"Lower\"],\n         Upper = preds[, \"Upper\"])\n\n# Load ggplot2 for visualization\nlibrary(ggplot2)\n\n# Create the plot\nggplot(plot_data, aes(x = Y)) +\n  geom_point(aes(y = Point_Estimate), color = \"black\", shape = 16, alpha = 0.7) + # Point estimates\n  geom_point(aes(y = Median), color = \"blue\", shape = 16, alpha = 0.7) + # Bootstrap median\n  geom_errorbar(aes(ymin = Lower, ymax = Upper), color = \"red\", width = 0.2, alpha = 0.5) + # Confidence intervals\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\") + # 45-degree line\n  scale_x_continuous(limits = c(0, 6000)) + \n  scale_y_continuous(limits = c(0, 6000)) +\n  labs(title = \"Observed vs Bootstrap Confidence Intervals\",\n       x = \"Observed Values\",\n       y = \"Predicted Values\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\nFrom the figure, we can see that the bootstrap median values align closely with the point estimate, which suggests that the model is fairly stable across different resampled datasets. Besides, the error bars show that the confidence intervals are wider at some higher values, ndicate higher uncertainty in those predictions. Again, most points fall along the 45 degree line except some predictions lower than observed values at high value area.\n\n# Module 10 Part 3\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make predictions on test data\n\nall_preds_test <-  predict(m2_10, test_data) %>% bind_cols(test_data)\n\n#compute RMSE for test data '\n\nall_rmse_test <- rmse(all_preds_test, truth = Y, estimate = .pred)\n\nprint(all_rmse_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard        518.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npredictions_train  <- all_preds_train %>% mutate(Dataset = \"Train\")\npredictions_test  <- all_preds_test  %>% mutate(Dataset = \"Test\")\n\n\n\n#Combine train and test predictions\npred_combined <- bind_rows(predictions_train, predictions_test)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(pred_combined , aes(x = Y, y = .pred, color = Dataset, shape = Dataset)) +\n  geom_point(alpha = 0.6) +  # Scatter points for observed vs predicted\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\") +  # Reference 45-degree line\n  scale_x_continuous(limits = c(0, 5000)) +  # Set x-axis range\n  scale_y_continuous(limits = c(0, 5000)) +  # Set y-axis range\n  labs(title = \"Observed vs Predicted Values (Train vs Test Data)\",\n       x = \"Observed Y\",\n       y = \"Predicted Y\",\n       color = \"Dataset\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](fitting-exercise_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\nThe plots Observed vs. Predicted values for the training and test datasets. This scatterplot compares predicted values of the outcome variable 𝑌 from the fitted model against observed values, separately for training and test data. The dashed 45-degree reference line represents perfect prediction (i.e., predicted = observed). Points closer to this line indicate better predictive performance. Triangles (blue) represent the training set, and circles (pink) represent the test set. The distribution around the reference line suggests the model captures the general trend in both datasets, though some variability is observed, particularly at lower and higher ranges of 𝑌, with a slightly wider spread in the test set. Overall, this plot supports the finding of Model with all predictors included porfoms better accross different datasets.\n\nI want to print RMSE for all models including train and data test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_MRSE <- data.frame(\n  Model = c(\"Null Model\", \"Model 1 (DOSE only)\", \"Model 2 (All Predictors)\", \"Model 2 (Test Data)\"),\n  RMSE = c(RMSE_train_Null$.estimate, RMSE_train_DOSE$.estimate, RMSE_train_All$.estimate, all_rmse_test$.estimate)\n)\n\nprint(summary_MRSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     Model     RMSE\n1               Null Model 948.3526\n2      Model 1 (DOSE only) 702.7909\n3 Model 2 (All Predictors) 627.2724\n4      Model 2 (Test Data) 518.2239\n```\n:::\n:::\n\n\n### Conclusion\n\nThe predictive performance of the models was assessed using root mean squared error (RMSE). The null model, which includes no predictors, had the highest RMSE (948.35), indicating poor predictive accuracy. Model 1, which included only the DOSE variable, showed a substantial improvement with an RMSE of 702.79. Model 2, incorporating all available predictors, further reduced the RMSE to 627.27 on the training data, suggesting that additional variables contributed meaningful predictive value. Model 2 achieved its best performance on the test data, with an RMSE of 518.22, indicating good generalization to unseen data. These results highlight the importance of including multiple relevant predictors to enhance model accuracy and reliability\n",
    "supporting": [
      "fitting-exercise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}