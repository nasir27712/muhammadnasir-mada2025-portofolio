{
  "hash": "ab471fc3599a49e1dc1ed240eb8eb327",
  "result": {
    "markdown": "---\ntitle: \"CDC Data Exercise\" \noutput: html\neditor: visual\n---\n\n\n# About the dataset\n\nThe Botswana Combination Prevention Project (BCPP) was a collaborative research effort led by the Botswana Ministry of Health (MOH), the Harvard School of Public Health/Botswana Harvard AIDS Institute Partnership (BHP), and the U.S. Centers for Disease Control and Prevention (CDC). This community-based randomized trial aimed to assess the impact of various HIV prevention strategies on reducing HIV incidence across 15 intervention and 15 control communities. The intervention communities received comprehensive HIV testing, linkage to care, and universal treatment services, guided by the UNAIDS 90-90-90 targets: ensuring 90% of individuals with HIV are aware of their status, 90% of those diagnosed are on antiretroviral therapy (ART), and 90% of those on ART achieve viral suppression.\n\nThe BCPP study was structured around two interrelated protocols: the Evaluation Protocol and the Intervention Protocol. The Evaluation Protocol assessed the primary outcome—HIV incidence—along with key secondary outcomes, focusing on data collected from the Baseline Household Survey, the HIV Incidence Cohort, and the End of Study Survey. Meanwhile, the Intervention Protocol involved the implementation of a combination prevention (CP) package in combination prevention communities (CPCs), monitoring the uptake of interventions such as expanded HIV testing and counseling, enhanced male circumcision services, and improved access to HIV care and treatment.\n\nThe dataset is available and free to download at CDC Website:https://data.cdc.gov/Global-Health/Botswana-Combination-Prevention-Project-BCPP-Publi/qcw5-4m9q/about_data.\n\nThe study is a cohort study with 3 phases. In this exercise, I only work on year 3 dataset. There are many information covered in this dataset, including demographic information of the respondent, soccioeconomic factors, HIV exposure, HIV status and conditions.\n\n# Install all packages needed\n\nInstall and library all packages needed in this section.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe following package(s) will be installed:\n- tidyverse [2.0.0]\nThese packages will be installed into \"~/MADA_NEW/muhammadnasir-mada2025-portofolio/renv/library/windows/R-4.4/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing tidyverse ...                      OK [linked from cache]\nSuccessfully installed 1 package in 26 milliseconds.\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe following package(s) will be installed:\n- ggplot2 [3.5.1]\nThese packages will be installed into \"~/MADA_NEW/muhammadnasir-mada2025-portofolio/renv/library/windows/R-4.4/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing ggplot2 ...                        OK [linked from cache]\nSuccessfully installed 1 package in 25 milliseconds.\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at C:/Users/mn27712/MADA_NEW/muhammadnasir-mada2025-portofolio\n```\n:::\n\n```{.r .cell-code}\ninstall.packages(\"patchwork\")  # This package is to redefine \"/\" operator for plot arrangement\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe following package(s) will be installed:\n- patchwork [1.3.0]\nThese packages will be installed into \"~/MADA_NEW/muhammadnasir-mada2025-portofolio/renv/library/windows/R-4.4/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing patchwork ...                      OK [linked from cache]\nSuccessfully installed 1 package in 24 milliseconds.\n```\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\ninstall.packages(\"writexl\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe following package(s) will be installed:\n- writexl [1.5.2]\nThese packages will be installed into \"~/MADA_NEW/muhammadnasir-mada2025-portofolio/renv/library/windows/R-4.4/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing writexl ...                        OK [linked from cache]\nSuccessfully installed 1 package in 27 milliseconds.\n```\n:::\n\n```{.r .cell-code}\nlibrary(writexl)\nlibrary(haven)\nlibrary(dplyr)\ninstall.packages(\"janitor\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe following package(s) will be installed:\n- janitor [2.2.1]\nThese packages will be installed into \"~/MADA_NEW/muhammadnasir-mada2025-portofolio/renv/library/windows/R-4.4/x86_64-w64-mingw32\".\n\n# Installing packages --------------------------------------------------------\n- Installing janitor ...                        OK [linked from cache]\nSuccessfully installed 1 package in 23 milliseconds.\n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\nlibrary(procs)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: common\n```\n:::\n:::\n\n\n# Loading the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## set path  dictionary \nbostwana <- here::here(\"cdcdata-exercise\",\"data\", \"cdcbostwana.csv\") # set the pathway to create relative path \n\nbostwana <- read_csv(bostwana) # read the dataset stored in specified path\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 11369 Columns: 322\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (217): de_subj_idC, de_hh_idC, de_plot_idC, region, random_arm, survey, ...\ndbl  (64): community_rndmN, pair_rndmN, interview_days, yeardone, age_at_int...\nlgl  (41): religion_name, religious_affil, relig_theogrp, ethnicity, prev_hi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(bostwana)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 322\n  de_subj_idC de_hh_idC de_plot_idC region community_rndmN pair_rndmN random_arm\n  <chr>       <chr>     <chr>       <chr>            <dbl>      <dbl> <chr>     \n1 10011A      16863A    14700A      North…              25         13 Intervent…\n2 1001A       8552A     17400A      South…               4          1 Intervent…\n3 10021A      13235A    4578A       Centr…               5          8 Standard …\n4 10023A      7028A     7820A       Centr…               9          4 Standard …\n5 10026A      5500A     4704A       South…              19          3 Intervent…\n6 10032A      2667A     8896A       South…              14          2 Standard …\n# ℹ 315 more variables: interview_days <dbl>, yeardone <dbl>, survey <chr>,\n#   gender <chr>, age_at_interview <dbl>, age5cat <chr>,\n#   length_residence <chr>, permanent_resident <chr>, intend_residency <chr>,\n#   nights_away <chr>, cattle_postlands <chr>, religion_name <lgl>,\n#   religious_affil <lgl>, relig_theogrp <lgl>, ethnicity <lgl>,\n#   marital_status <chr>, num_wives <dbl>, husband_wives <dbl>,\n#   live_alone <chr>, livewith_family <chr>, livewith_partner <chr>, …\n```\n:::\n\n```{.r .cell-code}\ndim(bostwana)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11369   322\n```\n:::\n:::\n\n\nThe dataset contains 11369 observations and 322 columns.\n\n# Data Cleaning\n\nI want to select interesting variables for further analysis and clean the data as needed including dropping/ lablig missing values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbost_df <- bostwana %>% \n  select(\"region\", \"random_arm\", \"gender\", \"age_at_interview\", \"age5cat\", \"employment_status\", \"circumcised\", \"hiv_status_current\", \"hiv_status_time\", \"viral_load_yr3\",  \"cd4_survey_yr3\", \"cd4_surveydays_yr3\", \"arv_duration_days\")\n\nhead(bost_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 13\n  region   random_arm       gender age_at_interview age5cat    employment_status\n  <chr>    <chr>            <chr>             <dbl> <chr>      <chr>            \n1 Northern Intervention     M                  45.7 45-54 yea… Unemployed not l…\n2 Southern Intervention     F                  51.8 45-54 yea… Unemployed looki…\n3 Central  Standard of Care F                  40.9 35-44 yea… Unemployed looki…\n4 Central  Standard of Care F                  18.7 16-24 yea… Unemployed not l…\n5 Southern Intervention     F                  35.8 35-44 yea… Employed         \n6 Southern Standard of Care F                  56.9 55-64 yea… Unemployed looki…\n# ℹ 7 more variables: circumcised <chr>, hiv_status_current <chr>,\n#   hiv_status_time <chr>, viral_load_yr3 <dbl>, cd4_survey_yr3 <dbl>,\n#   cd4_surveydays_yr3 <dbl>, arv_duration_days <dbl>\n```\n:::\n\n```{.r .cell-code}\nsummary(bost_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    region           random_arm           gender          age_at_interview\n Length:11369       Length:11369       Length:11369       Min.   :17.20   \n Class :character   Class :character   Class :character   1st Qu.:26.70   \n Mode  :character   Mode  :character   Mode  :character   Median :35.70   \n                                                          Mean   :38.03   \n                                                          3rd Qu.:48.20   \n                                                          Max.   :67.90   \n                                                                          \n   age5cat          employment_status  circumcised        hiv_status_current\n Length:11369       Length:11369       Length:11369       Length:11369      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n hiv_status_time    viral_load_yr3    cd4_survey_yr3   cd4_surveydays_yr3\n Length:11369       Min.   :     40   Min.   :  20.0   Min.   : 358      \n Class :character   1st Qu.:     40   1st Qu.: 401.0   1st Qu.: 875      \n Mode  :character   Median :     40   Median : 573.0   Median : 895      \n                    Mean   :   4305   Mean   : 602.1   Mean   : 881      \n                    3rd Qu.:     40   3rd Qu.: 757.0   3rd Qu.: 911      \n                    Max.   :2243242   Max.   :1567.0   Max.   :1184      \n                    NA's   :8130      NA's   :10594    NA's   :8032      \n arv_duration_days\n Min.   :   0     \n 1st Qu.: 908     \n Median :2393     \n Mean   :2432     \n 3rd Qu.:3764     \n Max.   :5879     \n NA's   :8222     \n```\n:::\n:::\n\n\nNote: To make easy for further analysis, I selected several variables:\n\n-   region = region of sbject\n-   random_arm = randomized arm\n-   age= age\n-   age5cat = age category\n-   employment_status = employment status\n-   hiv_status_current = Current HIV status\n-   viral_load_yr3 = viral load in year 3 of the study\n-   cd4_survey_yr3 = CD4 count in year 3\n-   cd4_surveydays_yr3 = numbers of days enrolled to survey year 3.\n-   arv_duration_days = number of day (duration) taking ARV\n\nIn this excercise, I would like to see the relationship between viral load, lenght of enrollment, ARV duration, and CD4 count. Therefore, I will drop all missing data in those variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- bost_df %>% \n  drop_na(viral_load_yr3, cd4_survey_yr3, cd4_surveydays_yr3, arv_duration_days) %>% # I drop all observation wit N/A data\n  filter(viral_load_yr3 != 0, \n         cd4_survey_yr3 != 0, \n         cd4_surveydays_yr3 != 0, \n         arv_duration_days !=0) # I found some observation contain 0 I drop those observation\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(data, class) # I want to check class of all variables \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            region         random_arm             gender   age_at_interview \n       \"character\"        \"character\"        \"character\"          \"numeric\" \n           age5cat  employment_status        circumcised hiv_status_current \n       \"character\"        \"character\"        \"character\"        \"character\" \n   hiv_status_time     viral_load_yr3     cd4_survey_yr3 cd4_surveydays_yr3 \n       \"character\"          \"numeric\"          \"numeric\"          \"numeric\" \n arv_duration_days \n         \"numeric\" \n```\n:::\n:::\n\n\nFor N/A information in categorical data, I lable those missing value wih 999. However, the values are in characters. I want to change the values into factors to make us easy in analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data %>% \n  mutate(region = recode(region, \n                         \"Northern\" = 0,\n                         \"Southern\" = 1, \n                         \"Central\" = 2), \n         random_arm = recode(random_arm, \n                             \"Standard of Care\" = 0,\n                             \"Intervention\" = 1), \n         gender = recode(gender,\n                         \"M\" = 0,\n                         \"F\" =1), \n         age5cat = recode (age5cat, \n                           \"16-24 years\" = 0, \n                           \"25-34 years\" = 1, \n                           \"35-44 years\" = 2, \n                           \"45-54 years\" = 3, \n                           \"55-64 years\" = 4), \n         employment_status = recode(employment_status , \n                                    \"Employed\" = 0, \n                                    \"Unemployed looking for work\" = 1, \n                                    \"Unemployed not looking for work\" = 2), \n         circumcised= recode(circumcised , \n                             \"No\" = 0, \n                             \"Yes\" = 1), \n         hiv_status_current = recode(hiv_status_current, \n                                     \"HIV-uninfected\" = 0, \n                                     \"HIV-infected\" = 1, \n                                     \"Refused HIV testing\" = 2), \n         hiv_status_time = recode(hiv_status_time, \n                                  \"HIV-negative\" = 0, \n                                  \"HIV-positive: previously diagnosed\" = 1, \n                                  \"Refused HIV testing\" = 2, \n                                  \"HIV-positive: newly discovered\" = 3)) # this part is to recode from character to numeric to allow us convert ito factors. \n\nsapply(data, class) # check character of the variables \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            region         random_arm             gender   age_at_interview \n         \"numeric\"          \"numeric\"          \"numeric\"          \"numeric\" \n           age5cat  employment_status        circumcised hiv_status_current \n         \"numeric\"          \"numeric\"          \"numeric\"          \"numeric\" \n   hiv_status_time     viral_load_yr3     cd4_survey_yr3 cd4_surveydays_yr3 \n         \"numeric\"          \"numeric\"          \"numeric\"          \"numeric\" \n arv_duration_days \n         \"numeric\" \n```\n:::\n:::\n\n\nNow, I want to convert categorical variables into factors\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data %>%\n  mutate(across (c(\"region\", \"random_arm\", \"gender\", \"age5cat\", \"employment_status\", \"circumcised\", \"hiv_status_current\",  \"hiv_status_time\"), as.factor)) # this is to convert multiple variables into factors. as.factor() only can work in single variable. \n\nsapply(data, class) # check character of the variables \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            region         random_arm             gender   age_at_interview \n          \"factor\"           \"factor\"           \"factor\"          \"numeric\" \n           age5cat  employment_status        circumcised hiv_status_current \n          \"factor\"           \"factor\"           \"factor\"           \"factor\" \n   hiv_status_time     viral_load_yr3     cd4_survey_yr3 cd4_surveydays_yr3 \n          \"factor\"          \"numeric\"          \"numeric\"          \"numeric\" \n arv_duration_days \n         \"numeric\" \n```\n:::\n:::\n\n\nI want to replace all N/A with 999 in categorical variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data %>%\n  mutate(across(where(is.factor), ~ replace_na(as.character(.), \"999\"))) %>% # replace the values\n  mutate(across(where(is.character), as.factor)) # convert the variable back to factor. \n\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 539  13\n```\n:::\n:::\n\n\nThe data is clean now and ready for data exploration and analysis. There are 539 obserations and 13 variables in the final data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- data %>%\n  summarise(\n    mean_viral_load = mean(viral_load_yr3, na.rm = TRUE),\n    sd_viral_load = sd(viral_load_yr3, na.rm = TRUE),\n    mean_cd4 = mean(cd4_survey_yr3, na.rm = TRUE),\n    sd_cd4 = sd(cd4_survey_yr3, na.rm = TRUE)\n  )\nprint(summary_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n  mean_viral_load sd_viral_load mean_cd4 sd_cd4\n            <dbl>         <dbl>    <dbl>  <dbl>\n1           1784.        13182.     620.   279.\n```\n:::\n:::\n\n\nNow I want to make summary statistics for Viral load and visualize it ina plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_by_arm <- data %>%\n  group_by(random_arm) %>%\n  summarise(\n    mean_cd4 = mean(cd4_survey_yr3, na.rm = TRUE),\n    sd_cd4 = sd(cd4_survey_yr3, na.rm = TRUE)\n  ) # create by randomise_arm \n\nplot1 <- ggplot(summary_by_arm, aes(x = random_arm, y = mean_cd4, fill = random_arm)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = mean_cd4 - sd_cd4, ymax = mean_cd4 + sd_cd4), width = 0.2) +\n  labs(title = \"Mean CD4 Count by randomise group with Standard Deviation\",\n       x = \"Groups\", y = \"Mean CD4 Count\", \n       caption = \"Red (0)= Standard of Care, Green (1)= Intervention \") +\n  theme_minimal() +\n  theme(plot.background = element_rect(color = \"black\", size = 1)) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n:::\n\n```{.r .cell-code}\nprint(plot1)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfigure_file = here(\"cdcdata-exercise\", \"pictures\", \"CD4 Mean and SD .png\") # to set up location for the pictures created \nggsave(filename = figure_file, plot=plot1) # save the pictures created \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\nNow I want to make summary statistics for viral load and visualize it in a plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_by_arm_vl <- data %>%\n  group_by(random_arm) %>%\n  summarise(\n    mean_vl = mean(viral_load_yr3, na.rm = TRUE),\n    sd_vl = sd(viral_load_yr3, na.rm = TRUE)\n  ) # create by randomise_arm \n\nplot2 <- ggplot(summary_by_arm_vl, aes(x = random_arm, y = mean_vl, fill = random_arm)) +\n  geom_bar(stat = \"identity\") +\n  geom_errorbar(aes(ymin = mean_vl - sd_vl, ymax = mean_vl + sd_vl), width = 0.2) +\n  labs(title = \"Mean Viral Load Count by randomise group with Standard Deviation\",\n       x = \"Groups\", y = \"Mean Viral Load\", \n       caption = \"Red (0)= Standard of Care, Green (1)= Intervention \") +\n  theme_minimal() +\n  theme(plot.background = element_rect(color = \"black\", size = 1)) \n\nprint(plot2)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfigure_file = here(\"cdcdata-exercise\", \"pictures\", \"Viral Load Mean and SD .png\") # to set up location for the pictures created \nggsave(filename = figure_file, plot=plot2) # save the pictures created\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n\n# Data Exploration\n\nIn this part, I want to explore the data and vizualise it before data analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot3 <- ggplot(data, aes(x = viral_load_yr3, y = cd4_survey_yr3, color = region)) + \n  geom_point(size = 3) +  # Specify geom as geom_point to make a scatterplot\n  labs(title = \"Viral Load VS CD4 count based on the region\", \n       x = \"Viral load\", \n       y = \"CD4\") +  # Rename title and axes\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate state names \n        legend.position = \"bottom\",  # Position legend at the bottom\n        plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5), \n        axis.title.x = element_text(size = 12, face = \"bold\"), \n        axis.title.y = element_text(size = 12, face = \"bold\")) + # Increase size and boldness of title and axes\n  scale_color_manual(values = c(\"0\" = \"#53d127\", \"1\" = \"#2ce1b0\", \"2\" = \"#ff5733\"))+ # crete color manually \n  theme(plot.background = element_rect(color = \"black\", size = 1))\n\nprint(plot3)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfigure_file = here(\"cdcdata-exercise\", \"pictures\", \"Viral Load VS CD4 based on region .png\") # to set up location for the pictures created \nggsave(filename = figure_file, plot=plot3) # save the pictures created\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot4 <- ggplot(data, aes(x = arv_duration_days , y = cd4_survey_yr3, color = region)) + \n  geom_boxplot() +  # Specify geom as geom_point to make a scatterplot\n  labs(title = \"ARV Duration VS CD4 count based on the region\", \n       x = \"ARV Duration (days)\", \n       y = \"CD4 count\",\n       caption = \"Green = Nothern, Blue= Northern, and red= Central\") +  # Rename title and axes\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate state names \n        legend.position = \"bottom\",  # Position legend at the bottom\n        plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5), \n        axis.title.x = element_text(size = 12, face = \"bold\"), \n        axis.title.y = element_text(size = 12, face = \"bold\")) + # Increase size and boldness of title and axes\n  theme(plot.background = element_rect(color = \"black\", size = 1)) +\n  scale_x_continuous(limits = c(0, 1000)) + # Set x-axis maximum limit to 1000\n  scale_color_manual(values = c(\"0\" = \"#53d127\", \"1\" = \"#2ce1b0\", \"2\" = \"#ff5733\")) # crete color manually \n\nprint(plot4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nfigure_file = here(\"cdcdata-exercise\", \"pictures\", \"ARV Duration VS CD4 count based on the region .png\") # to set up location for the pictures created \nggsave(filename = figure_file, plot=plot4) # save the pictures created\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`stat_boxplot()`).\n```\n:::\n:::\n\n\n# This section contributed by Rayleen Lewis.\n\n#### Performing a few more checks\n\nPrior to creating the synthetic dataset, I wanted to check on a few more things with the data, like number of persons in each region and arm of the study. It also looks like most people are virally suppressed, so I wanted to look at the viral load among people who had values \\>200. I also want to get the median and IQR of CD4 count by region.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Number of persons in each region\ntable(data$region)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  0   1   2 \n160 192 187 \n```\n:::\n\n```{.r .cell-code}\n#Number of persons in each arm of the study\ntable(data$random_arm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  0   1 \n239 300 \n```\n:::\n\n```{.r .cell-code}\n#Confirming that basically everyone is virally suppressed\ndata_supp <- data %>%\n  filter(viral_load_yr3>200)\nggplot(data_supp, aes(x = viral_load_yr3)) + geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndata_rl <- data %>%\n  mutate(viral_2 = if_else(viral_load_yr3 < 200, 0, 1))\ntable(data_rl$viral_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  0   1 \n510  29 \n```\n:::\n\n```{.r .cell-code}\n#95% are virally suppressed (viral load <200)\n\n#Mean (SD) of CD4 count by arm\nproc_means(data, var = cd4_survey_yr3, class = random_arm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 9\n  CLASS  TYPE  FREQ VAR                N  MEAN   STD   MIN   MAX\n  <fct> <dbl> <int> <chr>          <int> <dbl> <dbl> <dbl> <dbl>\n1 <NA>      0   539 cd4_survey_yr3   539  620.  279.    70  1567\n2 0         1   239 cd4_survey_yr3   239  604.  265.    70  1540\n3 1         1   300 cd4_survey_yr3   300  632.  290.    78  1567\n```\n:::\n\n```{.r .cell-code}\nproc_means(data, var = viral_load_yr3, class = random_arm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 9\n  CLASS  TYPE  FREQ VAR                N  MEAN    STD   MIN    MAX\n  <fct> <dbl> <int> <chr>          <int> <dbl>  <dbl> <dbl>  <dbl>\n1 <NA>      0   539 viral_load_yr3   539 1784. 13182.    40 177075\n2 0         1   239 viral_load_yr3   239 3256. 19241.    40 177075\n3 1         1   300 viral_load_yr3   300  610.  3854.    40  37415\n```\n:::\n:::\n\n\n#### Generating synthetic data\n\nI aimed to reproduce a dataset similar to the dataset above. The following prompt was used in ChatGPT to generate the code in the next code chunk: using R, create a dataset with 539 observations and variables called region with 3 levels (values 0, 1, 2), arm with 2 levels (0, 1), cd4 (continuous), viral_load (continuous). 55% of observations should have an arm value of 1. 95% of the values for viral_load should be \\<200. Among observations with arm = 0, viral_load should have a mean of 3256 and standard deviation of 19241 and cd4 should have a mean of 604 and standard deviation of 265. Among observations with arm = 1, viral_load should have a mean of 610 and standard deviation of 3854 and cd4 should have a mean of 632 and standard deviation of 290. 160 observations should have a region value of 0, 192 should have a region value equal to 1 and the rest should have a region value equal to 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # For reproducibility\n\n# Define the number of observations\nn <- 539\n\n# Define region values\nregion <- c(rep(0, 160), rep(1, 192), rep(2, n - 160 - 192))\n\n# Define arm values ensuring 55% are 1\narm <- sample(c(0, 1), n, replace = TRUE, prob = c(0.45, 0.55))\n\n# Generate cd4 values based on arm\ncd4 <- ifelse(arm == 0,\n              rnorm(sum(arm == 0), mean = 604, sd = 265),\n              rnorm(sum(arm == 1), mean = 632, sd = 290))\n\n# Generate viral_load values based on arm\nviral_load <- ifelse(arm == 0,\n                     rnorm(sum(arm == 0), mean = 3256, sd = 19241),\n                     rnorm(sum(arm == 1), mean = 610, sd = 3854))\n\n# Ensure 95% of viral_load values are <200\nthreshold <- quantile(viral_load, 0.95)\nviral_load <- ifelse(viral_load > 200, runif(length(viral_load), min = 0, max = 200), viral_load)\n\n# Create data frame\ndataset <- data.frame(region = factor(region), arm = factor(arm), cd4 = cd4, viral_load = viral_load)\n\n# Check dataset\nsummary(dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n region  arm          cd4           viral_load       \n 0:160   0:228   Min.   :-251.6   Min.   :-48569.28  \n 1:192   1:311   1st Qu.: 446.1   1st Qu.: -3267.70  \n 2:187           Median : 637.1   Median :    24.23  \n                 Mean   : 625.9   Mean   : -3507.56  \n                 3rd Qu.: 800.0   3rd Qu.:   125.58  \n                 Max.   :1518.6   Max.   :   198.68  \n```\n:::\n:::\n\n\nI noticed that \\>25% of the viral load values were negative. I needed to update the code to set the minimum value to 40 (based on the original dataset). To update the code, I used the following follow-up prompt: can you update the code so that the min value for viral_load is 40?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # For reproducibility\n\n# Define the number of observations\nn <- 539\n\n# Define region values\nregion <- c(rep(0, 160), rep(1, 192), rep(2, n - 160 - 192))\n\n# Define arm values ensuring 55% are 1\narm <- sample(c(0, 1), n, replace = TRUE, prob = c(0.45, 0.55))\n\n# Generate cd4 values based on arm\ncd4 <- ifelse(arm == 0,\n              rnorm(sum(arm == 0), mean = 604, sd = 265),\n              rnorm(sum(arm == 1), mean = 632, sd = 290))\n\n# Generate viral_load values based on arm\nviral_load <- ifelse(arm == 0,\n                     rnorm(sum(arm == 0), mean = 3256, sd = 19241),\n                     rnorm(sum(arm == 1), mean = 610, sd = 3854))\n\n# Ensure 95% of viral_load values are <200 while maintaining a minimum of 40\nthreshold <- quantile(viral_load, 0.95)\nviral_load <- ifelse(viral_load > 200, runif(length(viral_load), min = 40, max = 200), viral_load)\nviral_load <- pmax(viral_load, 40)  # Ensure minimum value is 40\n\n# Create data frame\ndataset <- data.frame(region = factor(region), arm = factor(arm), cd4 = cd4, viral_load = viral_load)\n\n# Check dataset\nsummary(dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n region  arm          cd4           viral_load    \n 0:160   0:228   Min.   :-251.6   Min.   : 40.00  \n 1:192   1:311   1st Qu.: 446.1   1st Qu.: 40.00  \n 2:187           Median : 637.1   Median : 59.39  \n                 Mean   : 625.9   Mean   : 87.73  \n                 3rd Qu.: 800.0   3rd Qu.:140.22  \n                 Max.   :1518.6   Max.   :198.95  \n```\n:::\n:::\n\n\n#### Recreating tables and plots from above\n\nTo check the synthetic dataset, I will recreate some of the results from above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mean and SD of viral load and CD4 count by arm\n#Synthetic dataset\nproc_means(dataset, var = cd4, class = arm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CLASS TYPE FREQ VAR   N     MEAN      STD       MIN      MAX\n1  <NA>    0  539 cd4 539 625.8906 261.6480 -251.6203 1518.566\n2     0    1  228 cd4 228 599.0607 250.5687 -201.0123 1255.786\n3     1    1  311 cd4 311 645.5601 268.1762 -251.6203 1518.566\n```\n:::\n\n```{.r .cell-code}\n#Original dataset\nproc_means(data, var = cd4_survey_yr3, class = random_arm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 9\n  CLASS  TYPE  FREQ VAR                N  MEAN   STD   MIN   MAX\n  <fct> <dbl> <int> <chr>          <int> <dbl> <dbl> <dbl> <dbl>\n1 <NA>      0   539 cd4_survey_yr3   539  620.  279.    70  1567\n2 0         1   239 cd4_survey_yr3   239  604.  265.    70  1540\n3 1         1   300 cd4_survey_yr3   300  632.  290.    78  1567\n```\n:::\n\n```{.r .cell-code}\n#Synthetic dataset\nproc_means(dataset, var = viral_load, class = arm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  CLASS TYPE FREQ        VAR   N     MEAN      STD MIN      MAX\n1  <NA>    0  539 viral_load 539 87.72695 54.60308  40 198.9452\n2     0    1  228 viral_load 228 90.65165 55.76379  40 198.9452\n3     1    1  311 viral_load 311 85.58280 53.72527  40 198.2108\n```\n:::\n\n```{.r .cell-code}\n#Original dataset\nproc_means(data, var = viral_load_yr3, class = random_arm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 9\n  CLASS  TYPE  FREQ VAR                N  MEAN    STD   MIN    MAX\n  <fct> <dbl> <int> <chr>          <int> <dbl>  <dbl> <dbl>  <dbl>\n1 <NA>      0   539 viral_load_yr3   539 1784. 13182.    40 177075\n2 0         1   239 viral_load_yr3   239 3256. 19241.    40 177075\n3 1         1   300 viral_load_yr3   300  610.  3854.    40  37415\n```\n:::\n:::\n\n\nThe means and standard deviations for each arm are very comparable between the original and synthetic datasets. The means are within 15 of each other. The number in each arm is also similar.\n\nI also used ChatGPT to create plots similar to the plots above to see how well ChatGPT could continue to use the dataset. I supplied this prompt to create the code for the plots: write code to create three plots. first, plot the mean cd4 by arm with error bars showing 1 standard deviation, color arm = 0 as red and arm = 1 as teal. For the second plot, perform the same as the first plot using viral_load instead of cd4. For the third plot, create a scatterplot with cd4 as the y and viral_load as the x, coloring the dots by region.\n\nAs a note, based on my prompt, R assigned one of the colors in Plots 1 and 2 as teal, which isn't a color R recognized. I changed teal to blue in the code below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute summary statistics for CD4 by arm\ncd4_summary <- dataset %>%\n  group_by(arm) %>%\n  summarise(mean_cd4 = mean(cd4),\n            sd_cd4 = sd(cd4)) \n\n# First plot: Mean CD4 by arm with error bars\np1 <- ggplot(cd4_summary, aes(x = arm, y = mean_cd4, fill = arm)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  geom_errorbar(aes(ymin = mean_cd4 - sd_cd4, ymax = mean_cd4 + sd_cd4), width = 0.2) +\n  scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) +\n  labs(title = \"Mean CD4 by Arm\", x = \"Arm\", y = \"Mean CD4 Count\") +\n  theme_minimal()\n\n# Compute summary statistics for Viral Load by arm\nviral_summary <- dataset %>%\n  group_by(arm) %>%\n  summarise(mean_viral = mean(viral_load),\n            sd_viral = sd(viral_load)) \n\n# Second plot: Mean Viral Load by arm with error bars\np2 <- ggplot(viral_summary, aes(x = arm, y = mean_viral, fill = arm)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  geom_errorbar(aes(ymin = mean_viral - sd_viral, ymax = mean_viral + sd_viral), width = 0.2) +\n  scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) +\n  labs(title = \"Mean Viral Load by Arm\", x = \"Arm\", y = \"Mean Viral Load\") +\n  theme_minimal()\n\n# Third plot: Scatterplot of CD4 vs. Viral Load, colored by Region\np3 <- ggplot(dataset, aes(x = viral_load, y = cd4, color = region)) +\n  geom_point(alpha = 0.7) +\n  scale_color_manual(values = c(\"0\" = \"blue\", \"1\" = \"green\", \"2\" = \"purple\")) +\n  labs(title = \"Scatterplot of CD4 vs Viral Load\", x = \"Viral Load\", y = \"CD4 Count\") +\n  theme_minimal()\n\n# Display plots\nprint(p1)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(p2)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(p3)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-18-3.png){width=672}\n:::\n:::\n\n\nThe synthetic viral load variable has a max of 200, even though 5% of values were supposed to be above 200 leading to a mean value of 3300 for arm = 0 and 610 for arm = 1. To get around this, I told ChatGPT what the problem was and suggested a solution: For the dataset creation, the mean viral_load is too low. Can the order of the steps for confirming 95% of value are below 200 and sampling from the distribution be switched?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # For reproducibility\n\n# Define the number of observations\nn <- 539\n\n# Define region values\nregion <- c(rep(0, 160), rep(1, 192), rep(2, n - 160 - 192))\n\n# Define arm values ensuring 55% are 1\narm <- sample(c(0, 1), n, replace = TRUE, prob = c(0.45, 0.55))\n\n# Generate cd4 values based on arm\ncd4 <- ifelse(arm == 0,\n              rnorm(sum(arm == 0), mean = 604, sd = 265),\n              rnorm(sum(arm == 1), mean = 632, sd = 290))\n\n# Generate viral_load values based on arm\nviral_load <- numeric(n)  # Initialize vector\nviral_load[arm == 0] <- rnorm(sum(arm == 0), mean = 3256, sd = 19241)\nviral_load[arm == 1] <- rnorm(sum(arm == 1), mean = 610, sd = 3854)\n\n# Ensure 95% of viral_load values are <200 while keeping original distribution\nhigh_values <- which(viral_load >= quantile(viral_load, 0.95))\nviral_load[high_values] <- runif(length(high_values), min = 40, max = 200)  # Keep min at 40\n\n# Create data frame\ndataset <- data.frame(region = factor(region), arm = factor(arm), cd4 = cd4, viral_load = viral_load)\n\n# Check dataset\nsummary(dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n region  arm          cd4           viral_load      \n 0:160   0:228   Min.   :-251.6   Min.   :-48569.3  \n 1:192   1:311   1st Qu.: 446.1   1st Qu.: -3309.8  \n 2:187           Median : 637.1   Median :   268.9  \n                 Mean   : 625.9   Mean   :   101.8  \n                 3rd Qu.: 800.0   3rd Qu.:  4466.5  \n                 Max.   :1518.6   Max.   : 25375.5  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute summary statistics for CD4 by arm\ncd4_summary <- dataset %>%\n  group_by(arm) %>%\n  summarise(mean_cd4 = mean(cd4),\n            sd_cd4 = sd(cd4)) \n\n# First plot: Mean CD4 by arm with error bars\np1 <- ggplot(cd4_summary, aes(x = arm, y = mean_cd4, fill = arm)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  geom_errorbar(aes(ymin = mean_cd4 - sd_cd4, ymax = mean_cd4 + sd_cd4), width = 0.2) +\n  scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) +\n  labs(title = \"Mean CD4 by Arm\", x = \"Arm\", y = \"Mean CD4 Count\") +\n  theme_minimal()\n\n# Compute summary statistics for Viral Load by arm\nviral_summary <- dataset %>%\n  group_by(arm) %>%\n  summarise(mean_viral = mean(viral_load),\n            sd_viral = sd(viral_load)) \n\n# Second plot: Mean Viral Load by arm with error bars\np2 <- ggplot(viral_summary, aes(x = arm, y = mean_viral, fill = arm)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  geom_errorbar(aes(ymin = mean_viral - sd_viral, ymax = mean_viral + sd_viral), width = 0.2) +\n  scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) +\n  labs(title = \"Mean Viral Load by Arm\", x = \"Arm\", y = \"Mean Viral Load\") +\n  theme_minimal()\n\n# Third plot: Scatterplot of CD4 vs. Viral Load, colored by Region\np3 <- ggplot(dataset, aes(x = viral_load, y = cd4, color = region)) +\n  geom_point(alpha = 0.7) +\n  scale_color_manual(values = c(\"0\" = \"blue\", \"1\" = \"green\", \"2\" = \"purple\")) +\n  labs(title = \"Scatterplot of CD4 vs Viral Load\", x = \"Viral Load\", y = \"CD4 Count\") +\n  theme_minimal()\n\n# Display plots\nprint(p1)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(p2)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-20-2.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(p3)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-20-3.png){width=672}\n:::\n:::\n\n\nThis resulted in viral_load values that were negative again, so I added a final prompt: Can you update so the lowest value for viral_load is 40?\n\nThe following code was created:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # For reproducibility\n\n# Define the number of observations\nn <- 539\n\n# Define region values\nregion <- c(rep(0, 160), rep(1, 192), rep(2, n - 160 - 192))\n\n# Define arm values ensuring 55% are 1\narm <- sample(c(0, 1), n, replace = TRUE, prob = c(0.45, 0.55))\n\n# Generate cd4 values based on arm\ncd4 <- ifelse(arm == 0,\n              rnorm(sum(arm == 0), mean = 604, sd = 265),\n              rnorm(sum(arm == 1), mean = 632, sd = 290))\n\n# Generate viral_load values based on arm\nviral_load <- numeric(n)  # Initialize vector\nviral_load[arm == 0] <- rnorm(sum(arm == 0), mean = 3256, sd = 19241)\nviral_load[arm == 1] <- rnorm(sum(arm == 1), mean = 610, sd = 3854)\n\n# Ensure 95% of viral_load values are <200 while keeping original distribution\nhigh_values <- which(viral_load >= quantile(viral_load, 0.95))\nviral_load[high_values] <- runif(length(high_values), min = 40, max = 200)  # Keep min at 40\n\n# Ensure minimum viral_load is 40\nviral_load <- pmax(viral_load, 40)\n\n# Create data frame\ndataset <- data.frame(region = factor(region), arm = factor(arm), cd4 = cd4, viral_load = viral_load)\n\n# Check dataset\nsummary(dataset)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n region  arm          cd4           viral_load     \n 0:160   0:228   Min.   :-251.6   Min.   :   40.0  \n 1:192   1:311   1st Qu.: 446.1   1st Qu.:   40.0  \n 2:187           Median : 637.1   Median :  268.9  \n                 Mean   : 625.9   Mean   : 3525.9  \n                 3rd Qu.: 800.0   3rd Qu.: 4466.5  \n                 Max.   :1518.6   Max.   :25375.5  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute summary statistics for CD4 by arm\ncd4_summary <- dataset %>%\n  group_by(arm) %>%\n  summarise(mean_cd4 = mean(cd4),\n            sd_cd4 = sd(cd4)) \n\n# First plot: Mean CD4 by arm with error bars\np1 <- ggplot(cd4_summary, aes(x = arm, y = mean_cd4, fill = arm)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  geom_errorbar(aes(ymin = mean_cd4 - sd_cd4, ymax = mean_cd4 + sd_cd4), width = 0.2) +\n  scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) +\n  labs(title = \"Mean CD4 by Arm\", x = \"Arm\", y = \"Mean CD4 Count\") +\n  theme_minimal()\n\n# Compute summary statistics for Viral Load by arm\nviral_summary <- dataset %>%\n  group_by(arm) %>%\n  summarise(mean_viral = mean(viral_load),\n            sd_viral = sd(viral_load)) \n\n# Second plot: Mean Viral Load by arm with error bars\np2 <- ggplot(viral_summary, aes(x = arm, y = mean_viral, fill = arm)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), color = \"black\") +\n  geom_errorbar(aes(ymin = mean_viral - sd_viral, ymax = mean_viral + sd_viral), width = 0.2) +\n  scale_fill_manual(values = c(\"0\" = \"red\", \"1\" = \"blue\")) +\n  labs(title = \"Mean Viral Load by Arm\", x = \"Arm\", y = \"Mean Viral Load\") +\n  theme_minimal()\n\n# Third plot: Scatterplot of CD4 vs. Viral Load, colored by Region\np3 <- ggplot(dataset, aes(x = viral_load, y = cd4, color = region)) +\n  geom_point(alpha = 0.7) +\n  scale_color_manual(values = c(\"0\" = \"blue\", \"1\" = \"green\", \"2\" = \"purple\")) +\n  labs(title = \"Scatterplot of CD4 vs Viral Load\", x = \"Viral Load\", y = \"CD4 Count\") +\n  theme_minimal()\n\n# Display plots\nprint(p1)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(p2)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(p3)\n```\n\n::: {.cell-output-display}\n![](cdcdata-exercise_files/figure-html/unnamed-chunk-22-3.png){width=672}\n:::\n:::\n\n\nThe bar chart for CD4 by arm is very similar to the original data. Based on the bar chart for viral load, the means appear simialr but the standard errors are reduced compared to the original data. The final plot, the scatterplot of CD4 count by viral load, showed that many more observations had higher viral loads and many more had viral loads above 200. It seems like ChatGPT isn't handling the prompts for this variable well. Overall, the synthetic data look good but not perfect.\n",
    "supporting": [
      "cdcdata-exercise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}